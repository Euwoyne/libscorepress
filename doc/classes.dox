
/*
  ScorePress - Music Engraving Software  (libscorepress-doc)
  Copyright (C) 2016 Dominik Lehmann
  
  Licensed under the EUPL, Version 1.1 or - as soon they
  will be approved by the European Commission - subsequent
  versions of the EUPL (the "Licence");
  You may not use this work except in compliance with the
  Licence.
  
  Unless required by applicable law or agreed to in
  writing, software distributed under the Licence is
  distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
  CONDITIONS OF ANY KIND, either expressed or implied.
  See the Licence for the specific language governing
  permissions and limitations under the Licence.
*/

/*! \file classes.hh
    \brief Main class hierachy modeling a musical score.
    
    The central header file, containing the hierarchy of all classes
    representing musical objects within a score such as notes, rests, voices,
    slurs, articulation symbols etc.
*/

/*! \class ScorePress::Position classes.hh
    \brief Graphical position (2-dimensional vector).
    
    A simple vector class template with addition, substraction and scalar
    multiplication, used to store graphical positions.
    
    \tparam T  Type of the coordinates. This type should have defined internal addition and multiplication operators.
*/

/*! \var T ScorePress::Position::x
    \brief The position's X-coordinate.
*/
/*! \var T ScorePress::Position::y
    \brief The position's Y-coordinate.
*/


/*! \struct ScorePress::Color classes.hh
    \brief RGBA-color structure
*/

/*! \var unsigned char ScorePress::Color::r
    \brief Red color component
*/
/*! \var unsigned char ScorePress::Color::g
    \brief Green color component
*/
/*! \var unsigned char ScorePress::Color::b
    \brief Blue color component
*/
/*! \var unsigned char ScorePress::Color::a
    \brief Alpha channel component
*/

/*! \fn bool ScorePress::operator == (const ScorePress::Color& c1, const ScorePress::Color& c2)
    \brief Equality operator for \link ScorePress::Color colors\endlink.
*/


/*! \struct ScorePress::Font classes.hh
    \brief %Font structure
*/

/*! \var std::string ScorePress::Font::family
    \brief Font family name
*/
/*! \var double ScorePress::Font::size
    \brief Font size (in pt)
*/
/*! \var bool ScorePress::Font::bold
    \brief &quot;Bold&quot; style flag
*/
/*! \var bool ScorePress::Font::italic
    \brief &quot;Italic&quot; style flag
*/
/*! \var bool ScorePress::Font::underline
    \brief &quot;Underline&quot; style flag
*/
/*! \var \c ScorePress::Color ScorePress::Font::color
    \brief Text color
*/

