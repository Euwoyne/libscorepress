
#
#  ScorePress - Music Engraving Software  (libscorepress)
#  Copyright (C) 2014 Dominik Lehmann
#  
#  Licensed under the EUPL, Version 1.1 or - as soon they
#  will be approved by the European Commission - subsequent
#  versions of the EUPL (the "Licence");
#  You may not use this work except in compliance with the
#  Licence.
#  
#  Unless required by applicable law or agreed to in
#  writing, software distributed under the Licence is
#  distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
#  CONDITIONS OF ANY KIND, either expressed or implied.
#  See the Licence for the specific language governing
#  permissions and limitations under the Licence.
#

#
# MAKEFILE
#

# programs
SHELL           := @SHELL@
SH              := @SH@
CXX             := @CXX@

LN              := @LN_S@
LDCONFIG        := @LDCONFIG@
INSTALL         := @INSTALL@
INSTALL_DATA    := @INSTALL_DATA@
INSTALL_PROGRAM := @INSTALL_PROGRAM@

AR              := @AR@
ARFLAGS         := rcs
GZIP            := @GZIP@
BZIP2           := @BZIP2@
ZIP             := @ZIP@

MAKEINFO        := @MAKEINFO@
DOXYGEN         := @DOXYGEN@
CHMOD           := @CHMOD@
LATEX           := @LATEX@ -interaction=batchmode
MAKEINDEX       := @MAKEINDEX@ -q

# target filenames
PACKAGE_TARNAME := @PACKAGE_TARNAME@

basename := scorepress
sofile   := @PACKAGE_NAME@.so.@PACKAGE_VERSION@
soname   := @PACKAGE_NAME@.so.@PACKAGE_VERSION_MAIN@
sobase   := @PACKAGE_NAME@.so
afile    := @PACKAGE_NAME@.a

# directories
prefix      := @prefix@
exec_prefix := @exec_prefix@
datarootdir := @datarootdir@
datadir     := @datadir@
datadir_pkg := ${datadir}/${PACKAGE_TARNAME}
distdir     := @PACKAGE_NAME@-@PACKAGE_VERSION@

srcdir      := @srcdir@
cppsrc      := ${srcdir}/src
includesrc  := ${srcdir}/include/${basename}
datasrc     := ${srcdir}/data
docsrc      := ${srcdir}/doc
doxyfile    := ${docsrc}/Doxyfile
doxy_ac     := ${docsrc}/Doxyfile.ac

builddir    := @builddir@
objdir      := ${builddir}/obj

libdir            := @libdir@
includedir        := @includedir@
oldincludedir     := @oldincludedir@
includedir_pkg    := ${includedir}/@PACKAGE_NAME@-@PACKAGE_VERSION@
oldincludedir_pkg := ${oldincludedir}/@PACKAGE_NAME@-@PACKAGE_VERSION@
mandir            := @mandir@
man3dir           := ${mandir}/man3
manext            := .3
docdir            := @docdir@
infodir           := @infodir@
htmldir           := @htmldir@
dvidir            := @dvidir@
pdfdir            := @pdfdir@
psdir             := @psdir@

# compiler flags
XMLFLAGS := @LIBXML_CFLAGS@
XMLLIBS  := @LIBXML_LIBS@

WARNINGS :=  @WARNINGS@

CTRLFLAGS := @CTRLFLAGS@

MODE    := @MODE@
DEBUG   := @DEBUG@
PROFILE := @PROFILE@
RELEASE := @RELEASE@

DEBUG_SO   := @DEBUG_SO@
PROFILE_SO := -DSCOREPRESS_SO -DSCOREPRESS_EXPORTS @PROFILE_SO@
RELEASE_SO := -DSCOREPRESS_SO -DSCOREPRESS_EXPORTS @RELEASE_SO@
SOFLAGS    := @SOFLAGS@ ${${MODE}_SO}
RPATHFLAG  := @RPATHFLAG@

CONFIGFLAGS   := -DDATADIR="\"${datadir_pkg}\""
USER_CXXFLAGS := @CXXFLAGS@ ${CXXFLAGS}
USER_CPPFLAGS := @CPPFLAGS@ ${CPPFLAGS}
USER_LDFLAGS  := @LDFLAGS@ ${LDFLAGS}
USER_LIBS     := @LIBS@ ${LIBS}
USER_RPATH    := @RPATH@

CXXFLAGS := ${WARNINGS} ${CTRLFLAGS} ${${MODE}} ${USER_CXXFLAGS}
CPPFLAGS := -I${includesrc} -I${builddir} ${USER_CPPFLAGS}
FLAGS    := ${CXXFLAGS} ${CPPFLAGS}
LIBS     := ${XMLLIBS} ${RPATH} ${USER_LIBS} ${USER_LDFLAGS} ${USER_RPATH}

SIZECHECK_ON    := -DSIZECHECK @FSIZECHECK@
SIZECHECK_OFF   :=
FRACT_SIZECHECK := @FRACT_SIZECHECK@

# file lists
cfiles := ${cppsrc}/main.cpp           \
          ${cppsrc}/engine.cpp         \
          ${cppsrc}/press.cpp          \
          ${cppsrc}/engraver.cpp       \
          ${cppsrc}/engraver_state.cpp \
          ${cppsrc}/engrave_info.cpp   \
          ${cppsrc}/reengrave_info.cpp \
          ${cppsrc}/context.cpp        \
          ${cppsrc}/pageset.cpp        \
          ${cppsrc}/plate.cpp          \
          ${cppsrc}/pick.cpp           \
          ${cppsrc}/cursor.cpp         \
          ${cppsrc}/user_cursor.cpp    \
          ${cppsrc}/edit_cursor.cpp    \
          ${cppsrc}/object_cursor.cpp  \
          ${cppsrc}/renderer.cpp       \
          ${cppsrc}/sprites.cpp        \
          ${cppsrc}/sprite_id.cpp      \
          ${cppsrc}/score.cpp          \
          ${cppsrc}/classes.cpp        \
          ${cppsrc}/log.cpp            \
          ${cppsrc}/fraction.cpp       \
          ${cppsrc}/parameters.cpp     \
          ${cppsrc}/error.cpp          \
          ${cppsrc}/file_format.cpp    \
          ${cppsrc}/config.cpp

hfiles := ${includesrc}/basetypes.hh      \
          ${includesrc}/classes.hh        \
          ${includesrc}/config.hh.ac      \
          ${builddir}/config.hh           \
          ${includesrc}/context.hh        \
          ${includesrc}/cursor_base.hh    \
          ${includesrc}/cursor.hh         \
          ${includesrc}/document.hh       \
          ${includesrc}/edit_cursor.hh    \
          ${includesrc}/engine.hh         \
          ${includesrc}/engrave_info.hh   \
          ${includesrc}/engraver.hh       \
          ${includesrc}/engraver_state.hh \
          ${includesrc}/error.hh          \
          ${includesrc}/export.hh         \
          ${includesrc}/file_format.hh    \
          ${includesrc}/file_reader.hh    \
          ${includesrc}/file_writer.hh    \
          ${includesrc}/fraction.hh       \
          ${includesrc}/log.hh            \
          ${includesrc}/meta.hh           \
          ${includesrc}/object_cursor.hh  \
          ${includesrc}/pageset.hh        \
          ${includesrc}/parameters.hh     \
          ${includesrc}/pick.hh           \
          ${includesrc}/plate.hh          \
          ${includesrc}/press.hh          \
          ${includesrc}/reengrave_info.hh \
          ${includesrc}/refptr.hh         \
          ${includesrc}/renderer.hh       \
          ${includesrc}/score.hh          \
          ${includesrc}/smartptr.hh       \
          ${includesrc}/sprite_id.hh      \
          ${includesrc}/sprites.hh        \
          ${includesrc}/stem_info.hh      \
          ${includesrc}/ui.hh             \
          ${includesrc}/undefined.hh      \
          ${includesrc}/user_cursor.hh

srcfiles := ${cfiles} ${hfiles}

sofiles := ${objdir}/main.s.o           \
           ${objdir}/engine.s.o         \
           ${objdir}/press.s.o          \
           ${objdir}/engraver.s.o       \
           ${objdir}/engraver_state.s.o \
           ${objdir}/engrave_info.s.o   \
           ${objdir}/reengrave_info.s.o \
           ${objdir}/context.s.o        \
           ${objdir}/pageset.s.o        \
           ${objdir}/plate.s.o          \
           ${objdir}/pick.s.o           \
           ${objdir}/cursor.s.o         \
           ${objdir}/user_cursor.s.o    \
           ${objdir}/edit_cursor.s.o    \
           ${objdir}/object_cursor.s.o  \
           ${objdir}/renderer.s.o       \
           ${objdir}/sprites.s.o        \
           ${objdir}/sprite_id.s.o      \
           ${objdir}/score.s.o          \
           ${objdir}/classes.s.o        \
           ${objdir}/log.s.o            \
           ${objdir}/fraction.s.o       \
           ${objdir}/parameters.s.o     \
           ${objdir}/error.s.o          \
           ${objdir}/file_format.s.o    \
           ${objdir}/config.s.o

afiles := ${objdir}/main.o           \
          ${objdir}/engine.o         \
          ${objdir}/press.o          \
          ${objdir}/engraver.o       \
          ${objdir}/engraver_state.o \
          ${objdir}/engrave_info.o   \
          ${objdir}/reengrave_info.o \
          ${objdir}/context.o        \
          ${objdir}/pageset.o        \
          ${objdir}/plate.o          \
          ${objdir}/pick.o           \
          ${objdir}/cursor.o         \
          ${objdir}/user_cursor.o    \
          ${objdir}/edit_cursor.o    \
          ${objdir}/object_cursor.o  \
          ${objdir}/renderer.o       \
          ${objdir}/sprites.o        \
          ${objdir}/sprite_id.o      \
          ${objdir}/score.o          \
          ${objdir}/classes.o        \
          ${objdir}/log.o            \
          ${objdir}/fraction.o       \
          ${objdir}/parameters.o     \
          ${objdir}/error.o          \
          ${objdir}/file_format.o    \
          ${objdir}/config.o

miscfiles := ${srcdir}/AUTHORS       \
             ${srcdir}/LICENCE.pdf   \
             ${srcdir}/LICENCES      \
             ${srcdir}/Makefile      \
             ${srcdir}/README        \
             ${srcdir}/TODO          \
             ${datasrc}/CC-BY-SA.pdf

distfiles := ${srcdir}/AUTHORS      \
             ${srcdir}/configure    \
             ${srcdir}/install-sh   \
             ${srcdir}/LICENCE.pdf  \
             ${srcdir}/Makefile.ac  \
             ${srcdir}/README       \
             ${srcdir}/data         \
             ${srcdir}/doc          \
             ${srcdir}/src

# header dependency list
deps_export_hh         := ${includesrc}/export.hh
deps_config_hh_ac      := ${includesrc}/config.hh.ac ${deps_export_hh}
deps_smartptr_hh       := ${includesrc}/smartptr.hh
deps_refptr_hh         := ${includesrc}/refptr.hh
deps_sprite_id_hh      := ${includesrc}/sprite_id.hh ${deps_export_hh}
deps_fraction_hh       := ${includesrc}/fraction.hh ${deps_export_hh}
deps_basetypes_hh      := ${includesrc}/basetypes.hh ${deps_fraction_hh}
deps_parameters_hh     := ${includesrc}/parameters.hh ${deps_basetypes_hh}
deps_classes_hh        := ${includesrc}/classes.hh ${deps_smartptr_hh} ${deps_refptr_hh} ${deps_sprite_id_hh} ${deps_parameters_hh}
deps_reengrave_info_hh := ${includesrc}/reengrave_info.hh ${deps_classes_hh}
deps_cursor_base_hh    := ${includesrc}/cursor_base.hh ${deps_reengrave_info_hh}
deps_meta_hh           := ${includesrc}/meta.hh ${deps_export_hh}
deps_error_hh          := ${includesrc}/error.hh ${deps_export_hh}
deps_score_hh          := ${includesrc}/score.hh ${deps_classes_hh} ${deps_meta_hh} ${deps_error_hh}
deps_document_hh       := ${includesrc}/document.hh ${deps_score_hh}
deps_sprites_hh        := ${includesrc}/sprites.hh ${deps_sprite_id_hh}
deps_file_reader_hh    := ${includesrc}/file_reader.hh ${deps_document_hh} ${deps_sprites_hh}
deps_renderer_hh       := ${includesrc}/renderer.hh ${deps_file_reader_hh}
deps_cursor_hh         := ${includesrc}/cursor.hh ${deps_classes_hh} ${deps_error_hh}
deps_stem_info_hh      := ${includesrc}/stem_info.hh ${deps_classes_hh}
deps_context_hh        := ${includesrc}/context.hh ${deps_classes_hh} ${deps_error_hh}
deps_plate_hh          := ${includesrc}/plate.hh ${deps_cursor_hh} ${deps_stem_info_hh} ${deps_context_hh}
deps_pageset_hh        := ${includesrc}/pageset.hh ${deps_plate_hh} ${deps_document_hh}
deps_log_hh            := ${includesrc}/log.hh ${deps_export_hh}
deps_user_cursor_hh    := ${includesrc}/user_cursor.hh ${deps_pageset_hh} ${deps_reengrave_info_hh} ${deps_log_hh}
deps_object_cursor_hh  := ${includesrc}/object_cursor.hh ${deps_pageset_hh} ${deps_reengrave_info_hh}
deps_press_hh          := ${includesrc}/press.hh ${deps_renderer_hh} ${deps_user_cursor_hh} ${deps_object_cursor_hh}
deps_engraver_hh       := ${includesrc}/engraver.hh ${deps_pageset_hh} ${deps_sprites_hh} ${deps_reengrave_info_hh} ${deps_log_hh}
deps_edit_cursor_hh    := ${includesrc}/edit_cursor.hh ${deps_user_cursor_hh} ${deps_object_cursor_hh} ${deps_engraver_hh}
deps_engine_hh         := ${includesrc}/engine.hh ${deps_press_hh} ${deps_edit_cursor_hh}
deps_pick_hh           := ${includesrc}/pick.hh ${deps_score_hh} ${deps_cursor_hh} ${deps_sprites_hh} ${deps_log_hh}
deps_engrave_info_hh   := ${includesrc}/engrave_info.hh ${deps_plate_hh} ${deps_score_hh}
deps_engraver_state_hh := ${includesrc}/engraver_state.hh ${deps_pageset_hh} ${deps_pick_hh} ${deps_engrave_info_hh} ${deps_reengrave_info_hh}
deps_file_writer_hh    := ${includesrc}/file_writer.hh ${deps_document_hh}
deps_file_format_hh    := ${includesrc}/file_format.hh ${deps_file_reader_hh} ${deps_file_writer_hh}
deps_ui_hh             := ${includesrc}/ui.hh ${deps_file_writer_hh} ${deps_renderer_hh}
deps_undefined_hh      := ${includesrc}/undefined.hh

deps_classes_cpp        := ${cppsrc}/classes.cpp ${deps_engraver_state_hh} ${deps_press_hh} ${deps_undefined_hh}
deps_config_cpp         := ${cppsrc}/config.cpp ${deps_config_hh}
deps_context_cpp        := ${cppsrc}/context.cpp ${deps_context_hh}
deps_cursor_cpp         := ${cppsrc}/cursor.cpp ${deps_cursor_hh}
deps_edit_cursor_cpp    := ${cppsrc}/edit_cursor.cpp ${deps_edit_cursor_hh}
deps_engine_cpp         := ${cppsrc}/engine.cpp ${deps_engine_hh}
deps_engrave_info_cpp   := ${cppsrc}/engrave_info.cpp ${deps_engrave_info_hh}
deps_engraver_cpp       := ${cppsrc}/engraver.cpp ${deps_engraver_hh} ${deps_engraver_state_hh} ${deps_undefined_hh}
deps_engraver_state_cpp := ${cppsrc}/engraver_state.cpp ${deps_engraver_state_hh} ${deps_undefined_hh}
deps_error_cpp          := ${cppsrc}/error.cpp ${deps_error_hh}
deps_file_format_cpp    := ${cppsrc}/file_format.cpp ${deps_file_format_hh} ${deps_renderer_hh}
deps_fraction_cpp       := ${cppsrc}/fraction.cpp ${deps_fraction_hh}
deps_log_cpp            := ${cppsrc}/log.cpp ${deps_log_hh}
deps_main_cpp           := ${cppsrc}/main.cpp
deps_object_cursor_cpp  := ${cppsrc}/object_cursor.cpp ${deps_object_cursor_hh} ${deps_engraver_state_hh}
deps_pageset_cpp        := ${cppsrc}/pageset.cpp ${deps_pageset_hh}
deps_parameters_cpp     := ${cppsrc}/parameters.cpp ${deps_parameters_hh}
deps_pick_cpp           := ${cppsrc}/pick.cpp ${deps_pick_hh} ${deps_undefined_hh}
deps_plate_cpp          := ${cppsrc}/plate.cpp ${deps_plate_hh} ${deps_undefined_hh}
deps_press_cpp          := ${cppsrc}/press.cpp ${deps_press_hh} ${deps_undefined_hh}
deps_reengrave_info_cpp := ${cppsrc}/reengrave_info.cpp ${deps_reengrave_info_hh}
deps_renderer_cpp       := ${cppsrc}/renderer.cpp ${deps_renderer_hh}
deps_score_cpp          := ${cppsrc}/score.cpp ${deps_score_hh}
deps_sprite_id_cpp      := ${cppsrc}/sprite_id.cpp ${deps_sprite_id_hh} ${deps_undefined_hh}
deps_sprites_cpp        := ${cppsrc}/sprites.cpp ${deps_sprites_hh} ${deps_undefined_hh}
deps_user_cursor_cpp    := ${cppsrc}/user_cursor.cpp ${deps_user_cursor_hh} ${deps_engraver_state_hh}


# string table
STR_make      := 'Making: %s\n'
STR_link      := '  Linking:    %s...\n'
STR_compile   := '  Compiling:  %s...\n'
STR_generate  := 'Generating: %s\n'
STR_install   := 'Installing: %s\n'
STR_uninstall := 'Removing: %s\n'
STR_clean     := 'Cleaning "%s"\n'
STR_cleancmp  := 'Cleaning "%s" (compilation only)\n'
STR_delete    := '  Deleting:  %s...\n'
STR_nonempty  := '    WARNING: "%s" is not empty\n'
STR_error     := '    ERROR: %s\n'
STR_errcreate := '    ERROR: cannot create directory "%s"\n'
STR_fail      := '    FAILED\n'
STR_sfail     := '    FAILED (%s)\n'

HELP_general := "\
General Compilation:\n\
  all                compile shared and static libraries\n\
  shared             compile the shared library\n\
  static             compile the static library\n"

HELP_libinst := "\
Library Installation:\n\
  install-so         install shared library  [LIBDIR]\n\
  install-so-strip   install stripped .so    [LIBDIR]\n\
  install-a          install static library  [LIBDIR]\n\
  install-a-strip    install stripped .a     [LIBDIR]\n\
  install-data       install data files      [DATADIR_PKG]\n\
  install-headers    install headers         [INCLUDEDIR_PKG]\n"

HELP_doc := "\
Documentation:\n\
  doc                generate readme and info files\n\
  readme             readme and licence information (NOOP)\n\
  info               generate info files\n"

HELP_dox := "\
Documentation:\n\
  doc                generate readme and info files\n\
  readme             readme and licence information (NOOP)\n\
  alldoc             generate documentation in every format\n\
  \n\
  info               generate info files\n\
  man                generate Manpages (section 3)\n\
  html               generate documentation as HTML\n\
  pdf                generate documentation as PDF\n\
  dvi                generate documentation as DVI\n\
  ps                 generate documentation as PostScript\n"

HELP_docinst := "\
Documentation Installation:\n\
  install-doc        install readme and info files\n\
  install-readme     readme and licence information       [DOCDIR]\n\
  install-info       install info files                   [INFODIR]\n"

HELP_doxinst := "\
Documentation Installation:\n\
  install-doc        install readme and info files\n\
  install-alldoc     install documentation in every format\n\
  \n\
  install-readme     readme and licence information       [DOCDIR]\n\
  install-info       install info files                   [INFODIR]\n\
  install-man        install Manpages (section 3)         [MANDIR/man3]\n\
  install-html       install documentation as HTML        [HTMLDIR]\n\
  install-pdf        install documentation as PDF         [PDFDIR]\n\
  install-dvi        install documentation as DVI         [DVIDIR]\n\
  install-ps         install documentation as PostScript  [PSDIR]\n"

HELP_install := "\
General Installation:  (collections of installation targets)\n\
  install-all             installs -so, -a, -data, -alldoc, -headers\n\
  install-dev             installs -so, -a, -data, -doc,    -headers\n\
  install                 installs -so, -a, -data, -doc\n\
  install-nodoc           installs -so, -a, -data\n\
  install-shared-dev      installs -so,     -data, -doc,    -headers\n\
  install-shared          installs -so,     -data, -doc\n\
  install-shared-nodoc    installs -so,     -data\n\
  install-static-dev      installs      -a, -data, -doc,    -headers\n\
  install-static          installs      -a, -data, -doc\n\
  install-static-nodoc    installs      -a, -data\n\
  \n\
  install-strip           like "install" but strips the .so and .a files\n\
  install-shared-strip    like "install-shared" but strips the .so file\n\
  install-static-strip    like "install-static" but strips the .a file\n\
\n\
NOTE: For each  install-*  target there is a corresponding  uninstall-*  target\n\
      that deletes the files installed by the install target.\n"

HELP_misc := "\
Miscellaneous:\n\
  clean              delete files created by build (incl. DoxyGen output)\n\
  distclean          additionally delete files created by  configure\n\
  \n\
  help               display this help-text\n\
  configinfo         display configuration (directories and flags)\n\
  Makefile           recreates this  Makefile  by running  configure\n"

HELP_packaging := 'Packaging:'
HELP_dist      := '  dist              create directory containing distribution files'
HELP_gzip      := '  dist-gzip         create  gzip  source package'
HELP_bzip2     := '  dist-bzip2        create  bzip2  source package'
HELP_zip       := '  dist-zip          create  zip  source package'
HELP_deb       := '  deb               create debian package [currently not implemented]'

HELP_dir := '  %-18s%s\n'


#
# MAIN TARGETS
#

.PHONY: install-all                                               \
        install-dev         install         install-nodoc         \
        install-shared-dev  install-shared  install-shared-nodoc  \
        install-static-dev  install-static  install-static-nodoc  \
        \
        uninstall-all                                                   \
        uninstall-dev         uninstall         uninstall-nodoc         \
        uninstall-shared-dev  uninstall-shared  uninstall-shared-nodoc  \
        uninstall-static-dev  uninstall-static  uninstall-static-nodoc  \
        \
        _default  all  shared  static  \
        \
        install-so    install-a    install-data    install-headers    \
        uninstall-so  uninstall-a  uninstall-data  uninstall-headers  \
        \
        doc  alldoc  info  man  html  pdf  dvi  ps  \
        \
        install-doc    install-alldoc    install-readme    install-man    install-html    install-pdf    install-dvi    install-ps    \
        uninstall-doc  uninstall-alldoc  uninstall-readme  uninstall-man  uninstall-html  uninstall-pdf  uninstall-dvi  uninstall-ps  \
        \
        clean  distclean  help  configinfo \
        mostlyclean  maintainer-clean      \
        \
        dist  dist-gzip  dist-bzip2  dist-zip  deb

# default target
_default: all

# install (collection targets)
install-all:          install-so       install-a       install-data install-alldoc install-headers
install-dev:          install-so       install-a       install-data install-doc    install-headers
install:              install-so       install-a       install-data install-doc
install-strip:        install-so-strip install-a-strip install-data install-doc
install-nodoc:        install-so       install-a       install-data
install-shared-dev:   install-so       install-data install-doc install-headers
install-shared:       install-so       install-data install-doc
install-shared-strip: install-so-strip install-data install-doc
install-shared-nodoc: install-so       install-data
install-static-dev:   install-a        install-data install-doc install-headers
install-static:       install-a        install-data install-doc
install-static-strip: install-a-strip  install-data install-doc install-headers
install-static-nodoc: install-a        install-data

# uninstall (collection targets)
uninstall-all:          uninstall-so uninstall-a uninstall-data uninstall-alldoc uninstall-headers
uninstall-dev:          uninstall-so uninstall-a uninstall-data uninstall-doc    uninstall-headers
uninstall:              uninstall-so uninstall-a uninstall-data uninstall-doc
uninstall-nodoc:        uninstall-so uninstall-a uninstall-data
uninstall-shared-dev:   uninstall-so uninstall-data uninstall-doc uninstall-headers
uninstall-shared:       uninstall-so uninstall-data uninstall-doc
uninstall-shared-nodoc: uninstall-so uninstall-data
uninstall-static-dev:   uninstall-a  uninstall-data uninstall-doc uninstall-headers
uninstall-static:       uninstall-a  uninstall-data uninstall-doc
uninstall-static-nodoc: uninstall-a  uninstall-data

# library (build)
all:    ${srcfiles} shared static
shared: ${srcfiles} ${objdir} ${objdir}/${sofile}
static: ${srcfiles} ${objdir} ${objdir}/${afile}

# library (install)
install-so: ${objdir} ${objdir}/${sofile} ${DESTDIR}${libdir}
	$(NORMAL_INSTALL)
	@printf ${STR_install} "${sofile}"
	@${INSTALL_PROGRAM} ${objdir}/${sofile} ${DESTDIR}${libdir}
	@-${LN} -f ${DESTDIR}${libdir}/${sofile} ${DESTDIR}${libdir}/${sobase}
	$(POST_INSTALL)
	@${LDCONFIG} -n ${DESTDIR}${libdir}

install-so-strip:
	@${make} INSTALL_PROGRAM='${INSTALL_PROGRAM} -s' install-so

install-a: ${objdir} ${objdir}/${afile} ${DESTDIR}${libdir}
	$(NORMAL_INSTALL)
	@printf ${STR_install} "${afile}"
	@cp ${objdir}/${afile} ${DESTDIR}${libdir}/${afile}

install-a-strip:
	@${make} INSTALL_PROGRAM='${INSTALL_PROGRAM} -s' install-a-strip

install-data: ${DESTDIR}${datadir_pkg}/dtd ${DESTDIR}${datadir_pkg}/symbol
	$(NORMAL_INSTALL)
	@printf ${STR_install} 'Symbols'
	@${INSTALL_DATA} -t ${DESTDIR}${datadir_pkg}/symbol ${datasrc}/symbol/*
	@printf ${STR_install} 'DTD'
	@${INSTALL_DATA} -t ${DESTDIR}${datadir_pkg}/dtd ${datasrc}/dtd/*

install-headers: ${DESTDIR}${includedir_pkg}/${basename}
	$(NORMAL_INSTALL)
	@printf ${STR_install} 'Headers'
	@${INSTALL_PROGRAM} -t ${DESTDIR}${includedir_pkg}/${basename} ${hfiles}

# library (uninstall)
uninstall-so:
	$(NORMAL_UNINSTALL)
	@test -f ${DESTDIR}${libdir}/${sobase} -o -f ${DESTDIR}${libdir}/${soname} -o -f ${DESTDIR}${libdir}/${sofile} && printf ${STR_uninstall} 'Shared Libraries' || :
	@-rm -f ${DESTDIR}${libdir}/${sobase}
	@-rm -f ${DESTDIR}${libdir}/${soname}
	@-rm -f ${DESTDIR}${libdir}/${sofile}

uninstall-a:
	$(NORMAL_UNINSTALL)
	@test -f ${DESTDIR}${libdir}/${afile} && printf ${STR_uninstall} 'Static Libraries' || :
	@-rm -f ${DESTDIR}${libdir}/${afile}

uninstall-data:
	$(NORMAL_UNINSTALL)
	@-test -d ${DESTDIR}${datadir_pkg} && printf ${STR_uninstall} 'Base Data' || :
	@-rm -rf ${DESTDIR}${datadir_pkg}/symbol
	@-rm -rf ${DESTDIR}${datadir_pkg}/dtd
	@test -d ${DESTDIR}${datadir_pkg} && (rmdir ${DESTDIR}${datadir_pkg} 2> /dev/null \
	                                  || printf ${STR_nonempty} "${DESTDIR}${datadir_pkg}") || :
uninstall-headers:
	$(NORMAL_UNINSTALL)
	@test -d ${DESTDIR}${includedir_pkg} && printf ${STR_uninstall} 'Headers' || :
	@-rm -rf ${DESTDIR}${includedir_pkg}

# documentation (build)
${doxyfile}: ${doxy_ac}
	@printf ${STR_generate} 'Doxyfile'
	@sed -e 's|@PACKAGE_NAME[@]|@PACKAGE_NAME@|g'       \
	     -e 's|@PACKAGE_VERSION[@]|@PACKAGE_VERSION@|g' \
	     -e 's|@OUTPUT_DIR[@]|${objdir}|g'              \
	     -e 's|@SOURCE_DIR[@]|${cppsrc}|g'              \
	     -e 's|@HEADER_DIR[@]|${includesrc}|g'          \
	     -e 's|@DOC_DIR[@]|${docsrc}|g'                 \
	     -e 's|@LATEX[@]|${LATEX}|g'                    \
	     -e 's|@MAKEINDEX[@]|${MAKEINDEX}|g'            \
	     < ${doxy_ac} > ${doxyfile}

doc:    readme info
alldoc: readme info man pdf html dvi ps
readme:

info: ${docsrc}/scorepress.info
${docsrc}/scorepress.info: ${docsrc}/scorepress.texi ${docsrc}/intro.texi ${docsrc}/tutorial.texi ${docsrc}/api.texi ${docsrc}/eupl.texi
	@printf ${STR_generate} 'Info Files'
	@if test "${MAKEINFO}" = ":"; then                                       \
	     printf ${STR_fail};                                                 \
	 else                                                                    \
	     ${MAKEINFO} ${docsrc}/scorepress.texi -o ${docsrc}/scorepress.info; \
	 fi

man: ${objdir}/man/man3
${objdir}/man/man3: ${doxyfile} ${objdir}
	@printf ${STR_generate} 'Manpages'
	@if test "${DOXYGEN}" = ":"; then                               \
	     printf ${STR_sfail} 'no DoxyGen installed';                \
	 else                                                           \
	     (cat ${doxyfile}; echo 'GENERATE_MAN=yes') | ${DOXYGEN} -; \
	     (cd ${objdir}/man/man3; ${GZIP} * 2> /dev/null);           \
	 fi

html: ${objdir}/html
${objdir}/html: ${doxyfile} ${objdir}
	@printf ${STR_generate} 'Documentation (HTML)'
	@if test "${DOXYGEN}" = ":"; then                                \
	     printf ${STR_sfail} 'no DoxyGen installed';                 \
	 else                                                            \
	     (cat ${doxyfile}; echo "GENERATE_HTML=yes") | ${DOXYGEN} -; \
	 fi
	@if test -d ${objdir}/html; then ${CHMOD} -R 0775 ${objdir}/html; fi

pdf: ${objdir}/refman.pdf
${objdir}/refman.pdf: ${doxyfile} ${objdir}
	@printf ${STR_generate} 'Documentation (PDF)'
	@if test "${DOXYGEN}" = ":"; then                       \
	     printf ${STR_sfail} 'no DoxyGen installed';        \
	 else                                                   \
	     (cat ${doxyfile}; echo 'GENERATE_LATEX=yes';       \
	                       printf "LATEX_CMD_NAME=\"%s --output-format pdf\"\n" "${LATEX}") | ${DOXYGEN} -; \
	 fi
	@if test -d ${objdir}/latex; then                       \
	     (cd ${objdir}/latex && ${MAKE} -s) > /dev/null;    \
	     if test -e ${objdir}/latex/refman.pdf; then        \
	         cp ${objdir}/latex/refman.pdf ${objdir};       \
	     else                                               \
	         printf ${STR_sfail} 'LaTeX failure';           \
	     fi;                                                \
	 fi

dvi: ${objdir}/refman.dvi
${objdir}/refman.dvi: ${doxyfile} ${objdir}
	@printf ${STR_generate} 'Documentation (DVI)'
	@if test "${DOXYGEN}" = ":"; then                       \
	     printf ${STR_sfail} 'no DoxyGen installed';        \
	 else                                                   \
	     (cat ${doxyfile}; echo "GENERATE_LATEX=yes";       \
	                       printf "LATEX_CMD_NAME=\"%s --output-format dvi\"\n" "${LATEX}") | ${DOXYGEN} -; \
	 fi
	@if test -d ${objdir}/latex; then                       \
	     (cd ${objdir}/latex && ${MAKE} -s) > /dev/null;    \
	     if test -e ${objdir}/latex/refman.dvi; then        \
	         cp ${objdir}/latex/refman.dvi ${objdir};       \
	     else                                               \
	         printf ${STR_sfail} 'LaTeX failure';           \
	     fi;                                                \
	 fi

ps: ${objdir}/refman.ps
${objdir}/refman.ps: ${objdir}/refman.dvi
	@if test -e ${objdir}/refman.dvi; then               \
	     printf ${STR_generate} 'Documentation (PS)';    \
	     (cd ${objdir}/latex && dvips -q refman.dvi) > /dev/null; \
	     if test -e ${objdir}/latex/refman.ps; then      \
	         cp ${objdir}/latex/refman.ps ${objdir};     \
	         echo;                                       \
	     else                                            \
	         printf ${STR_sfail} 'dvips failure';        \
	     fi;                                             \
	 fi

# documentation (install)
install-doc:    install-readme install-info
install-alldoc: install-readme install-info install-man install-html install-pdf install-dvi install-ps

install-readme: ${DESTDIR}${docdir}
	$(NORMAL_INSTALL)
	@printf ${STR_install} 'Base Documentation'
	@${INSTALL_DATA} ${miscfiles} ${DESTDIR}${docdir}

install-info: ${DESTDIR}${infodir} info
	$(NORMAL_INSTALL)
	@printf ${STR_install} 'Info Files'
	@${INSTALL_DATA} ${docsrc}/scorepress.info ${DESTDIR}${infodir}/scorepress.info

install-man: ${DESTDIR}${man3dir} man
	$(NORMAL_INSTALL)
	@printf ${STR_install} 'Manpages'
	@test -d ${objdir}/man/man3 && ${INSTALL_DATA} ${objdir}/man/man3/ScorePress_* ${DESTDIR}${man3dir} \
	                              || printf ${STR_error} 'Documentation not built. Please run "make man".'

install-html: ${DESTDIR}${htmldir}/html html
	$(NORMAL_INSTALL)
	@printf ${STR_install} 'Documentation (HTML)'
	@-test -d ${objdir}/html && ${INSTALL_DATA} ${objdir}/html/* ${DESTDIR}${htmldir}/html \
	                           || printf ${STR_error} 'Documentation not built. Please run "make html".'
	@-test -d ${objdir}/html && ${LN} ${DESTDIR}${htmldir}/html/index.html ${DESTDIR}${htmldir}/index.html

install-pdf: ${DESTDIR}${pdfdir} pdf
	$(NORMAL_INSTALL)
	@printf ${STR_install} 'Documentation (PDF)'
	@test -f ${objdir}/refman.pdf && ${INSTALL_DATA} ${objdir}/refman.pdf ${DESTDIR}${pdfdir} \
	                                || printf ${STR_error} 'Documentation not built. Please run "make pdf".'

install-dvi: ${DESTDIR}${dvidir} dvi
	$(NORMAL_INSTALL)
	@printf ${STR_install} 'Documentation (DVI)'
	@test -f ${objdir}/refman.dvi && ${INSTALL_DATA} ${objdir}/refman.dvi ${DESTDIR}${dvidir} \
	                                || printf ${STR_error} 'Documentation not built. Please run "make dvi".'

install-ps: ${DESTDIR}${psdir} ps
	$(NORMAL_INSTALL)
	@printf ${STR_install} 'Documentation (PS)'
	@test -f ${objdir}/refman.ps && ${INSTALL_DATA} ${objdir}/refman.ps ${DESTDIR}${psdir} \
	                               || printf ${STR_error} 'Documentation not built. Please run "make ps".'

# documentation (uninstall)
uninstall-doc:    uninstall-readme uninstall-info
uninstall-alldoc: uninstall-readme uninstall-info uninstall-man uninstall-html uninstall-pdf uninstall-dvi uninstall-ps

uninstall-readme:
	$(NORMAL_UNINSTALL)
	@-test -d ${DESTDIR}${docdir} && printf ${STR_uninstall} 'Base Documentation' || :
	@-rm -f ${DESTDIR}${docdir}/AUTHORS
	@-rm -f ${DESTDIR}${docdir}/CC-BY-SA.pdf
	@-rm -f ${DESTDIR}${docdir}/LICENCE.pdf
	@-rm -f ${DESTDIR}${docdir}/LICENCES
	@-rm -f ${DESTDIR}${docdir}/README
	@-rm -f ${DESTDIR}${docdir}/TODO
	@test -d ${DESTDIR}${docdir} && (rmdir ${DESTDIR}${docdir} 2> /dev/null || printf ${STR_nonempty} "${DESTDIR}${docdir}") || :

uninstall-info:
	$(NORMAL_UNINSTALL)
	@test -f ${DESTDIR}${infodir}/scorepress.info && printf ${STR_uninstall} 'Info Files' || :
	@-rm -f ${DESTDIR}${infodir}/scorepress.info

uninstall-man:
	$(NORMAL_UNINSTALL)
	@test -f ${DESTDIR}${man3dir}/ScorePress_Engraver.3.gz && printf ${STR_uninstall} 'Manpages' || :
	@-rm -f ${DESTDIR}${man3dir}/ScorePress_*

uninstall-html:
	$(NORMAL_UNINSTALL)
	@test -d ${DESTDIR}${htmldir}/html && printf ${STR_uninstall} 'Documentation (HTML)' || :
	@-rm -f ${DESTDIR}${htmldir}/index.html
	@-rm -rf ${DESTDIR}${htmldir}/html
	
uninstall-pdf:
	$(NORMAL_UNINSTALL)
	@test -f ${DESTDIR}${pdfdir}/refman.pdf && printf ${STR_uninstall} 'Documentation (PDF)' || :
	@-rm -f ${DESTDIR}${pdfdir}/refman.pdf
	@-rmdir ${DESTDIR}${pdfdir} 2> /dev/null || :

uninstall-dvi:
	$(NORMAL_UNINSTALL)
	@test -f ${DESTDIR}${dvidir}/refman.dvi && printf ${STR_uninstall} 'Documentation (DVI)' || :
	@-rm -f ${DESTDIR}${dvidir}/refman.dvi
	@-rmdir ${DESTDIR}${dvidir} 2> /dev/null || :

uninstall-ps:
	$(NORMAL_UNINSTALL)
	@test -f ${DESTDIR}${psdir}/refman.ps && printf ${STR_uninstall} 'Documentation (PS)' || :
	@-rm -f ${DESTDIR}${psdir}/refman.ps
	@-rmdir ${DESTDIR}${psdir} 2> /dev/null || :

# clean
mostly-clean:
	@printf ${STR_cleancmp} "${PACKAGE_TARNAME}"
	@-rm -f  ${afiles}
	@-rm -f  ${objdir}/${afile}
	@-rm -f  ${sofiles}
	@-rm -f  ${objdir}/${sofile}

clean:
	@printf ${STR_clean} "${PACKAGE_TARNAME}"
	@printf ${STR_delete} 'object-files'
	@-rm -f  ${afiles}
	@-rm -f  ${objdir}/${afile}
	@-rm -f  ${sofiles}
	@-rm -f  ${objdir}/${sofile}
	@printf ${STR_delete} 'documentation-files'
	@-rm -rf ${objdir}/html
	@-rm -rf ${objdir}/latex
	@-rm -rf ${objdir}/man
	@-rm -f  ${objdir}/refman.pdf
	@-rm -f  ${objdir}/refman.dvi
	@-rm -f  ${objdir}/refman.ps
	@printf ${STR_delete} 'build directory'
	@test -d ${objdir} && (rmdir ${objdir} 2> /dev/null || printf ${STR_nonempty} "${objdir}") || :

distclean: clean
	@printf ${STR_delete} 'configuration'
	@-rm -f ${doxyfile}
	@-rm -f ${srcdir}/config.hh
	@-rm -f ${srcdir}/config.log
	@-rm -f ${srcdir}/config.status
	@-rm -f ${srcdir}/Makefile

maintainer-clean:
	@echo 'This command is intended for maintainers to use; it'
	@echo 'deletes files that may need special tools to rebuild.'
	@echo
	@${MAKE} -s distclean
	@printf ${STR_delete} 'info files'
	@-rm -f ${docsrc}/scorepress.info

# user information
help:
	@echo 'Makefile for libscorepress 0.2.6.'
	@echo
	@${MAKE} -s help-targets
	@${MAKE} -s help-directories

help-targets:
	@printf "${HELP_general}"
	@printf "${HELP_libinst}"
	@if test "${DOXYGEN}" != ":"; then printf "${HELP_dox}";     else printf "${HELP_doc}";     fi
	@if test "${DOXYGEN}" != ":"; then printf "${HELP_doxinst}"; else printf "${HELP_docinst}"; fi
	@printf "${HELP_install}"
	@printf "${HELP_misc}"
	@printf "${HELP_packaging}"
	@if test "${GZIP}"  != ":"; then printf "${HELP_gzip}";  fi
	@if test "${BZIP2}" != ":"; then printf "${HELP_bzip2}"; fi
	@if test "${ZIP}"   != ":"; then printf "${HELP_zip}";   fi
	@printf "${HELP_deb}"
	@echo

help-directories:
	@echo 'Installation Directories:'
	@printf ${HELP_dir} 'PREFIX'  "${prefix}"
	@printf ${HELP_dir} 'WPREFIX' "${exec_prefix}"
	@echo
	@printf %s "${libdir}" | \
	 sed -e "s|${exec_prefix}\(/*\)|[EPREFIX]\1|" -e "s|${prefix}\(/*\)|[PREFIX]\1|" -e "s|${datadir}\(/*\)|[DATADIR]\1|" | \
	 xargs printf ${HELP_dir} 'LIBDIR'
	@printf %s "${datadir_pkg}" | \
	 sed -e "s|${prefix}\(/*\)|[PREFIX]\1|" -e "s|${exec_prefix}\(/*\)|[EPREFIX]\1|" -e "s|${datadir}\(/*\)|[DATADIR]\1|" | \
	 xargs printf ${HELP_dir} 'DATADIR_PKG'
	@printf %s "${includedir_pkg}" | \
	 sed -e "s|${prefix}\(/*\)|[PREFIX]\1|" -e "s|${exec_prefix}\(/*\)|[EPREFIX]\1|" -e "s|${datadir}\(/*\)|[DATADIR]\1|" | \
	 xargs printf ${HELP_dir} 'INCLUDEDIR_PKG'
	@echo
	@printf %s "${datadir}" | \
	 sed -e "s|${prefix}\(/*\)|[PREFIX]\1|" -e "s|${exec_prefix}\(/*\)|[EPREFIX]\1|" | \
	 xargs printf ${HELP_dir} 'DATADIR'
	@printf %s "${docdir}" | \
	 sed -e "s|${datadir}\(/*\)|[DATADIR]\1|" -e "s|${prefix}\(/*\)|[PREFIX]\1|" -e "s|${exec_prefix}\(/*\)|[EPREFIX]\1|" | \
	 xargs printf ${HELP_dir} 'DOCDIR'
	@printf %s "${infodir}" | \
	 sed -e "s|${docdir}\(/*\)|[DOCDIR]\1|" -e "s|${datadir}\(/*\)|[DATADIR]\1|" -e "s|${prefix}\(/*\)|[PREFIX]\1|" -e "s|${exec_prefix}\(/*\)|[EPREFIX]\1|" | \
	 xargs printf ${HELP_dir} 'INFODIR'
	@printf %s "${mandir}" | \
	 sed -e "s|${docdir}\(/*\)|[DOCDIR]\1|" -e "s|${datadir}\(/*\)|[DATADIR]\1|" -e "s|${prefix}\(/*\)|[PREFIX]\1|" -e "s|${exec_prefix}\(/*\)|[EPREFIX]\1|" | \
	 xargs printf ${HELP_dir} 'MANDIR'
	@printf %s "${htmldir}" | \
	 sed -e "s|${docdir}\(/*\)|[DOCDIR]\1|" -e "s|${datadir}\(/*\)|[DATADIR]\1|" -e "s|${prefix}\(/*\)|[PREFIX]\1|" -e "s|${exec_prefix}\(/*\)|[EPREFIX]\1|" | \
	 xargs printf ${HELP_dir} 'HTMLDIR'
	@printf %s "${pdfdir}" | \
	 sed -e "s|${docdir}\(/*\)|[DOCDIR]\1|" -e "s|${datadir}\(/*\)|[DATADIR]\1|" -e "s|${prefix}\(/*\)|[PREFIX]\1|" -e "s|${exec_prefix}\(/*\)|[EPREFIX]\1|" | \
	 xargs printf ${HELP_dir} 'PDFDIR'
	@printf %s "${dvidir}" | \
	 sed -e "s|${docdir}\(/*\)|[DOCDIR]\1|" -e "s|${datadir}\(/*\)|[DATADIR]\1|" -e "s|${prefix}\(/*\)|[PREFIX]\1|" -e "s|${exec_prefix}\(/*\)|[EPREFIX]\1|" | \
	 xargs printf ${HELP_dir} 'DVIDIR'
	@printf %s "${psdir}" | \
	 sed -e "s|${docdir}\(/*\)|[DOCDIR]\1|" -e "s|${datadir}\(/*\)|[DATADIR]\1|" -e "s|${prefix}\(/*\)|[PREFIX]\1|" -e "s|${exec_prefix}\(/*\)|[EPREFIX]\1|" | \
	 xargs printf ${HELP_dir} 'PSDIR'
	@echo

configinfo:
	@echo 'DIRECTORIES:'
	@printf '  srcdir:        %s\n' "${srcdir}"
	@echo
	@printf '  prefix:        %s\n' "${prefix}"
	@printf '  exec_prefix:   %s\n' "${exec_prefix}"
	@printf '  datarootdir:   %s\n' "${datarootdir}"
	@printf '  datadir:       %s\n' "${datadir}"
	@echo
	@printf '  libdir:        %s\n' "${libdir}"
	@printf '  includedir:    %s\n' "${includedir}"
	@printf '  oldincludedir: %s\n' "${oldincludedir}"
	@printf '  mandir:        %s\n' "${mandir}"
	@printf '  docdir:        %s\n' "${docdir}"
	@printf '  infodir:       %s\n' "${infodir}"
	@printf '  htmldir:       %s\n' "${htmldir}"
	@printf '  dvidir:        %s\n' "${dvidir}"
	@printf '  pdfdir:        %s\n' "${pdfdir}"
	@printf '  psdir:         %s\n' "${psdir}"
	@echo
	@echo 'COMPILER FLAGS:'
	@if test -n "${USER_CFLAGS}";   then printf '  CFLAGS:   %s\n' "${USER_CFLAGS}";  fi
	@if test -n "${USER_LIBS}";     then printf '  LIBS:     %s\n' "${USER_LIBS}";    fi
	@if test -n "${USER_LDFLAGS}";  then printf '  LDFLAGS:  %s\n' "${USER_LDFLAGS}"; fi
	@echo
	@echo "CONFIGURE OPTIONS:"
	@if test "${MODE}" = "DEBUG";   then echo   '  --enable-debug';   fi
	@if test "${MODE}" = "PROFILE"; then echo   '  --enable-profile'; fi
	@if test "${FRACT_SIZECHECK}" = "SIZECHECK_ON";                          \
	                                then echo   '  --enable-fraction-check';           fi
	@if test "${DOXYGEN}" != ":";   then echo   '  --enable-doxygen';                  fi
	@if test -n "${USER_RPATH}";    then printf '  --with-rpath=%s\n' "${USER_RPATH}"; fi
	@echo

confargs := --srcdir=${srcdir}               \
	        --prefix=${prefix}               \
            --exec_prefix=${exec_prefix}     \
            --datarootdir=${datarootdir}     \
            --datadir=${datadir}             \
            --libdir=${libdir}               \
            --includedir=${includedir}       \
            --oldincludedir=${oldincludedir} \
            --mandir=${mandir}               \
            --docdir=${docdir}               \
            --infodir=${infodir}             \
            --htmldir=${htmldir}             \
            --dvidir=${dvidir}               \
            --pdfdir=${pdfdir}               \
            --psdir=${psdir}

Makefile:
	@echo -n "${confargs} " > /tmp/$$.confargs
	@if test "${MODE}" = "RELEASE"; then printf '--disable-debug '           >> /tmp/$$.confargs; fi
	@if test "${MODE}" = "PROFILE"; then printf '--enable-profile '          >> /tmp/$$.confargs; fi
	@if test "${FRACT_SIZECHECK}" = "SIZECHECK_ON"; \
	                                then printf '--enable-fraction-check '   >> /tmp/$$.confargs; fi
	@if test -n "${RPATHFLAG}";     then printf '--enable-rpath '            >> /tmp/$$.confargs; fi
	@if test "${DOXYGEN}" != ":";   then printf '--with-doxygen '            >> /tmp/$$.confargs; fi
	
	@echo -n > /tmp/$$.envvars
	@if test -n "${USER_CXXFLAGS}"; then printf 'CXXFLAGS=%s ' "${USER_CXXFLAGS}" >> /tmp/$$.envvars; fi
	@if test -n "${USER_CPPFLAGS}"; then printf 'CPPFLAGS=%s ' "${USER_CPPFLAGS}" >> /tmp/$$.envvars; fi
	@if test -n "${USER_LDFLAGS}";  then printf 'LDFLAGS=%s '  "${USER_LDFLAGS}"  >> /tmp/$$.envvars; fi
	@if test -n "${USER_LIBS}";     then printf 'LIBS=%s '     "${USER_LIBS}"     >> /tmp/$$.envvars; fi
	@if test -n "${USER_RPATH}";    then printf 'RPATH=%s '    "${USER_RPATH}"    >> /tmp/$$.envvars; fi
	
	@echo 'Running configure script...'
	@(eval `cat /tmp/$$.envvars` ${srcdir}/configure `cat /tmp/$$.confargs`)
	@-rm -f /tmp/$$.confargs /tmp/$$.envvars


# distributions
dist: ${srcfiles} ${distdir}
	cp -RP --preserve=timestamps,links ${distfiles} ${distdir}
	if test -f ${distdir}/include/${basename}/config.hh; then rm -f ${distdir}/include/${basename}/config.hh; fi
	if test -f ${distdir}/doc/Doxyfile;                  then rm -f ${distdir}/doc/Doxyfile;  fi

dist-gzip: ${srcfiles} dist
	tar -cf - ${distdir} | ${GZIP} -c > ${distdir}.tar.gz

dist-bzip2: ${srcfiles} dist
	tar -cf - ${distdir} | ${BZIP2} -c > ${distdir}.tar.bz2

dist-zip: ${srcfiles} dist
	${ZIP} -qr ${distdir}.zip ${distdir}

deb: ${srcfiles}
	@echo 'Debian Packaging not implemented yet.'

# directories
${DESTDIR} ${objdir} ${distdir}:
	$(NORMAL_INSTALL)
	@-mkdir -p $@ 2> /dev/null || printf ${STR_errcreate} "$@"
${DESTDIR}/%:
	$(NORMAL_INSTALL)
	@-mkdir -p $@ 2> /dev/null || printf ${STR_errcreate} "$@"


#
# TARGET FILES
#

${objdir}/${sofile}:  ${srcfiles}
						@printf ${STR_make} "${sofile}"
						@${MAKE} -s ${sofiles}
						@printf ${STR_link} "${sofile}"
						@${CXX} -shared -Wl,-soname,${soname} -lc ${sofiles} -o ${objdir}/${sofile} ${XMLLIBS} ${FLAGS}

${objdir}/${afile}:   ${srcfiles}
						@printf ${STR_make} "${afile}"
						@${MAKE} -s ${afiles}
						@printf ${STR_link} "${afile}"
						@${AR} ${ARFLAGS} ${objdir}/${afile} ${afiles}

#
# OBJECT FILES
#

${objdir}/main.o:			${deps_main_cpp}
							printf ${STR_compile} 'main.cpp'
							${CXX} -c ${cppsrc}/main.cpp -o ${objdir}/main.o ${FLAGS}
${objdir}/main.s.o:			${deps_main_cpp}
							printf ${STR_compile} 'main.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/main.cpp -o ${objdir}/main.s.o ${FLAGS}

${objdir}/engine.o:			${deps_engine_cpp}
							printf ${STR_compile} 'engine.cpp'
							${CXX} -c ${cppsrc}/engine.cpp -o ${objdir}/engine.o ${FLAGS}
${objdir}/engine.s.o:		${deps_engine_cpp}
							printf ${STR_compile} 'engine.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/engine.cpp -o ${objdir}/engine.s.o ${FLAGS}

${objdir}/press.o:			${deps_press_cpp}
							printf ${STR_compile} 'press.cpp'
							${CXX} -c ${cppsrc}/press.cpp -o ${objdir}/press.o ${FLAGS}
${objdir}/press.s.o:		${deps_press_cpp}
							printf ${STR_compile} 'press.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/press.cpp -o ${objdir}/press.s.o ${FLAGS}

${objdir}/engraver.o:		${deps_engraver_cpp}
							printf ${STR_compile} 'engraver.cpp'
							${CXX} -c ${cppsrc}/engraver.cpp -o ${objdir}/engraver.o ${FLAGS}
${objdir}/engraver.s.o:		${deps_engraver_cpp}
							printf ${STR_compile} 'engraver.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/engraver.cpp -o ${objdir}/engraver.s.o ${FLAGS}

${objdir}/engraver_state.o:		${deps_engraver_state_cpp}
								printf ${STR_compile} 'engraver_state.cpp'
								${CXX} -c ${cppsrc}/engraver_state.cpp -o ${objdir}/engraver_state.o ${FLAGS}
${objdir}/engraver_state.s.o:	${deps_engraver_state_cpp}
								printf ${STR_compile} 'engraver_state.cpp'
								${CXX} ${SOFLAGS} -c ${cppsrc}/engraver_state.cpp -o ${objdir}/engraver_state.s.o ${FLAGS}

${objdir}/engrave_info.o:		${deps_engrave_info_cpp}
								printf ${STR_compile} 'engrave_info.cpp'
								${CXX} -c ${cppsrc}/engrave_info.cpp -o ${objdir}/engrave_info.o ${FLAGS}
${objdir}/engrave_info.s.o:		${deps_engrave_info_cpp}
								printf ${STR_compile} 'engrave_info.cpp'
								${CXX} ${SOFLAGS} -c ${cppsrc}/engrave_info.cpp -o ${objdir}/engrave_info.s.o ${FLAGS}

${objdir}/reengrave_info.o:		${deps_reengrave_info_cpp}
								printf ${STR_compile} 'reengrave_info.cpp'
								${CXX} -c ${cppsrc}/reengrave_info.cpp -o ${objdir}/reengrave_info.o ${FLAGS}
${objdir}/reengrave_info.s.o:	${deps_reengrave_info_cpp}
								printf ${STR_compile} 'reengrave_info.cpp'
								${CXX} ${SOFLAGS} -c ${cppsrc}/reengrave_info.cpp -o ${objdir}/reengrave_info.s.o ${FLAGS}

${objdir}/context.o:		${deps_context_cpp}
							printf ${STR_compile} 'context.cpp'
							${CXX} -c ${cppsrc}/context.cpp -o ${objdir}/context.o ${FLAGS}
${objdir}/context.s.o:		${deps_context_cpp}
							printf ${STR_compile} 'context.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/context.cpp -o ${objdir}/context.s.o ${FLAGS}

${objdir}/pageset.o:		${deps_pageset_cpp}
							printf ${STR_compile} 'pageset.cpp'
							${CXX} -c ${cppsrc}/pageset.cpp -o ${objdir}/pageset.o ${FLAGS}
${objdir}/pageset.s.o:		${deps_pageset_cpp}
							printf ${STR_compile} 'pageset.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/pageset.cpp -o ${objdir}/pageset.s.o ${FLAGS}

${objdir}/plate.o:			${deps_plate_cpp}
							printf ${STR_compile} 'plate.cpp'
							${CXX} -c ${cppsrc}/plate.cpp -o ${objdir}/plate.o ${FLAGS}
${objdir}/plate.s.o:		${deps_plate_cpp}
							printf ${STR_compile} 'plate.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/plate.cpp -o ${objdir}/plate.s.o ${FLAGS}

${objdir}/cursor.o:			${deps_cursor_cpp}
							printf ${STR_compile} 'cursor.cpp'
							${CXX} -c ${cppsrc}/cursor.cpp -o ${objdir}/cursor.o ${FLAGS}
${objdir}/cursor.s.o:		${deps_cursor_cpp}
							printf ${STR_compile} 'cursor.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/cursor.cpp -o ${objdir}/cursor.s.o ${FLAGS}

${objdir}/user_cursor.o:	${deps_user_cursor_cpp}
							printf ${STR_compile} 'user_cursor.cpp'
							${CXX} -c ${cppsrc}/user_cursor.cpp -o ${objdir}/user_cursor.o ${FLAGS}
${objdir}/user_cursor.s.o:	${deps_user_cursor_cpp}
							printf ${STR_compile} 'user_cursor.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/user_cursor.cpp -o ${objdir}/user_cursor.s.o ${FLAGS}

${objdir}/edit_cursor.o:	${deps_edit_cursor_cpp}
							printf ${STR_compile} 'edit_cursor.cpp'
							${CXX} -c ${cppsrc}/edit_cursor.cpp -o ${objdir}/edit_cursor.o ${FLAGS}
${objdir}/edit_cursor.s.o:	${deps_edit_cursor_cpp}
							printf ${STR_compile} 'edit_cursor.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/edit_cursor.cpp -o ${objdir}/edit_cursor.s.o ${FLAGS}

${objdir}/object_cursor.o:		${deps_object_cursor_cpp}
								printf ${STR_compile} 'object_cursor.cpp'
								${CXX} -c ${cppsrc}/object_cursor.cpp -o ${objdir}/object_cursor.o ${FLAGS}
${objdir}/object_cursor.s.o:	${deps_object_cursor_cpp}
								printf ${STR_compile} 'object_cursor.cpp'
								${CXX} ${SOFLAGS} -c ${cppsrc}/object_cursor.cpp -o ${objdir}/object_cursor.s.o ${FLAGS}

${objdir}/pick.o:			${deps_pick_cpp}
							printf ${STR_compile} 'pick.cpp'
							${CXX} -c ${cppsrc}/pick.cpp -o ${objdir}/pick.o ${FLAGS}
${objdir}/pick.s.o:			${deps_pick_cpp}
							printf ${STR_compile} 'pick.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/pick.cpp -o ${objdir}/pick.s.o ${FLAGS}

${objdir}/renderer.o:		${deps_renderer_cpp}
							printf ${STR_compile} 'renderer.cpp'
							${CXX} -c ${cppsrc}/renderer.cpp -o ${objdir}/renderer.o ${XMLFLAGS} ${FLAGS}
${objdir}/renderer.s.o:		${deps_renderer_cpp}
							printf ${STR_compile} 'renderer.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/renderer.cpp -o ${objdir}/renderer.s.o ${XMLFLAGS} ${FLAGS}

${objdir}/sprites.o:		${deps_sprites_cpp}
							printf ${STR_compile} 'sprites.cpp'
							${CXX} -c ${cppsrc}/sprites.cpp -o ${objdir}/sprites.o ${FLAGS}
${objdir}/sprites.s.o:		${deps_sprites_cpp}
							printf ${STR_compile} 'sprites.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/sprites.cpp -o ${objdir}/sprites.s.o ${FLAGS}

${objdir}/sprite_id.o:		${deps_sprite_id_cpp}
							printf ${STR_compile} 'sprite_id.cpp'
							${CXX} -c ${cppsrc}/sprite_id.cpp -o ${objdir}/sprite_id.o ${FLAGS}
${objdir}/sprite_id.s.o:	${deps_sprite_id_cpp}
							printf ${STR_compile} 'sprite_id.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/sprite_id.cpp -o ${objdir}/sprite_id.s.o ${FLAGS}

${objdir}/score.o:			${deps_score_cpp}
							printf ${STR_compile} 'score.cpp'
							${CXX} -c ${cppsrc}/score.cpp -o ${objdir}/score.o ${FLAGS}
${objdir}/score.s.o:		${deps_score_cpp}
							printf ${STR_compile} 'score.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/score.cpp -o ${objdir}/score.s.o ${FLAGS}

${objdir}/classes.o:		${deps_classes_cpp}
							printf ${STR_compile} 'classes.cpp'
							${CXX} -c ${cppsrc}/classes.cpp -o ${objdir}/classes.o ${FLAGS}
${objdir}/classes.s.o:		${deps_classes_cpp}
							printf ${STR_compile} 'classes.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/classes.cpp -o ${objdir}/classes.s.o ${FLAGS}

${objdir}/log.o:			${deps_log_cpp}
							printf ${STR_compile} 'log.cpp'
							${CXX} -c ${cppsrc}/log.cpp -o ${objdir}/log.o ${FLAGS}
${objdir}/log.s.o:			${deps_log_cpp}
							printf ${STR_compile} 'log.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/log.cpp -o ${objdir}/log.s.o ${FLAGS}

${objdir}/fraction.o:		${deps_fraction_cpp}
							printf ${STR_compile} 'fraction.cpp'
							${CXX} -c ${cppsrc}/fraction.cpp -o ${objdir}/fraction.o ${FRACT_SIZECHECK} ${FLAGS}
${objdir}/fraction.s.o:		${deps_fraction_cpp}
							printf ${STR_compile} 'fraction.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/fraction.cpp -o ${objdir}/fraction.s.o ${FRACT_SIZECHECK} ${FLAGS}

${objdir}/parameters.o:		${deps_parameters_cpp}
							printf ${STR_compile} 'parameters.cpp'
							${CXX} -c ${cppsrc}/parameters.cpp -o ${objdir}/parameters.o ${FLAGS}
${objdir}/parameters.s.o:	${deps_parameters_cpp}
							printf ${STR_compile} 'parameters.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/parameters.cpp -o ${objdir}/parameters.s.o ${FLAGS}

${objdir}/error.o:			${deps_error_cpp}
							printf ${STR_compile} 'error.cpp'
							${CXX} -c ${cppsrc}/error.cpp -o ${objdir}/error.o ${FLAGS}
${objdir}/error.s.o:		${deps_error_cpp}
							printf ${STR_compile} 'error.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/error.cpp -o ${objdir}/error.s.o ${FLAGS}

${objdir}/file_format.o:	${deps_file_format_cpp}
							printf ${STR_compile} 'file_format.cpp'
							${CXX} -c ${cppsrc}/file_format.cpp -o ${objdir}/file_format.o ${XMLFLAGS} ${FLAGS}
${objdir}/file_format.s.o:	${deps_file_format_cpp}
							printf ${STR_compile} 'file_format.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/file_format.cpp -o ${objdir}/file_format.s.o ${XMLFLAGS} ${FLAGS}

${objdir}/config.o:			${deps_config_cpp}
							printf ${STR_compile} 'config.cpp'
							${CXX} -c ${cppsrc}/config.cpp -o ${objdir}/config.o ${CONFIGFLAGS} ${FLAGS}
${objdir}/config.s.o:		${deps_config_cpp}
							printf ${STR_compile} 'config.cpp'
							${CXX} ${SOFLAGS} -c ${cppsrc}/config.cpp -o ${objdir}/config.s.o ${CONFIGFLAGS} ${FLAGS}

