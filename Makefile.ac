
#
#  ScorePress - Music Engraving Software  (libscorepress)
#  Copyright (C) 2013 Dominik Lehmann
#  
#  Licensed under the EUPL, Version 1.1 or - as soon they
#  will be approved by the European Commission - subsequent
#  versions of the EUPL (the "Licence");
#  You may not use this work except in compliance with the
#  Licence.
#  
#  Unless required by applicable law or agreed to in
#  writing, software distributed under the Licence is
#  distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
#  CONDITIONS OF ANY KIND, either expressed or implied.
#  See the Licence for the specific language governing
#  permissions and limitations under the Licence.
#

#
# MAKEFILE
#

# programs
SH        := @SH@
CXX       := @CXX@
AR        := @AR@ rcs
LN        := @LN_S@
LDCONFIG  := @LDCONFIG@ -n
INSTALL   := @INSTALL@
INSTALLU  := @INSTALL_DATA@
SED       := @SED@
PKGCONFIG := @PKGCONFIG@
DOXYGEN   := @DOXYGEN@
LATEX     := @LATEX@ -interaction=batchmode
MAKEINDEX := @MAKEINDEX@ -q

# target filenames
PACKAGE_TARNAME := @PACKAGE_TARNAME@

basename := scorepress
sofile   := @PACKAGE_NAME@.so.@PACKAGE_VERSION@
soname   := @PACKAGE_NAME@.so.@PACKAGE_VERSION_MAIN@
sobase   := @PACKAGE_NAME@.so
afile    := @PACKAGE_NAME@.a

# directories
prefix      := @prefix@
exec_prefix := @exec_prefix@
datarootdir := @datarootdir@
datadir     := @datadir@/${PACKAGE_TARNAME}
distdir     := @PACKAGE_NAME@-@PACKAGE_VERSION@

srcdir      := @srcdir@/src
headerdir   := @srcdir@/include/${basename}
datasrc     := @srcdir@/data
docsrc      := @srcdir@/doc
builddir    := @builddir@/build
doxyfile    := ${docsrc}/Doxyfile
doxy_ac     := ${docsrc}/Doxyfile.ac

libdir      := @libdir@
includedir  := @includedir@/@PACKAGE_NAME@-@PACKAGE_VERSION@
includedir2 := @oldincludedir@/@PACKAGE_NAME@-@PACKAGE_VERSION@
mandir      := @mandir@/man3
docdir      := @docdir@
htmldir     := @htmldir@/html
dvidir      := @dvidir@
pdfdir      := @pdfdir@
psdir       := @psdir@

# compiler flags
XMLFLAGS := @LIBXML_CFLAGS@
XMLLIBS  := @LIBXML_LIBS@

WARNINGS :=  @WARNINGS@

CTRLFLAGS := @CTRLFLAGS@

MODE    := @MODE@
DEBUG   := @DEBUG@
PROFILE := @PROFILE@
RELEASE := @RELEASE@

DEBUG_SO   := @DEBUG_SO@
PROFILE_SO := -DSCOREPRESS_SO -DSCOREPRESS_EXPORTS @PROFILE_SO@
RELEASE_SO := -DSCOREPRESS_SO -DSCOREPRESS_EXPORTS @RELEASE_SO@
SOFLAGS    := @SOFLAGS@ ${${MODE}_SO}

CONFIGFLAGS := -DDATADIR="\"${datadir}\""
USER_FLAGS := @CFLAGS@
USER_LIBS  := @LDFLAGS@ @LIBS@

FLAGS   := ${WARNINGS} ${CTRLFLAGS} ${${MODE}} -I${headerdir} ${USER_FLAGS}
LIBS    := ${XMLLIBS} ${USER_LIBS}

SIZECHECK_ON    := -DSIZECHECK @FSIZECHECK@
SIZECHECK_OFF   :=
FRACT_SIZECHECK := @FRACT_SIZECHECK@

# file lists
cfiles := ${srcdir}/main.cpp           \
          ${srcdir}/engine.cpp         \
          ${srcdir}/press.cpp          \
          ${srcdir}/engraver.cpp       \
          ${srcdir}/engraver_state.cpp \
          ${srcdir}/engrave_info.cpp   \
          ${srcdir}/context.cpp        \
          ${srcdir}/pageset.cpp        \
          ${srcdir}/plate.cpp          \
          ${srcdir}/pick.cpp           \
          ${srcdir}/cursor.cpp         \
          ${srcdir}/user_cursor.cpp    \
          ${srcdir}/edit_cursor.cpp    \
          ${srcdir}/renderer.cpp       \
          ${srcdir}/sprites.cpp        \
          ${srcdir}/sprite_id.cpp      \
          ${srcdir}/score.cpp          \
          ${srcdir}/classes.cpp        \
          ${srcdir}/log.cpp            \
          ${srcdir}/fraction.cpp       \
          ${srcdir}/error.cpp          \
          ${srcdir}/config.cpp

hfiles := ${headerdir}/engine.hh         \
          ${headerdir}/press.hh          \
          ${headerdir}/engraver.hh       \
          ${headerdir}/engraver_state.hh \
          ${headerdir}/engrave_info.hh   \
          ${headerdir}/context.hh        \
          ${headerdir}/pageset.hh        \
          ${headerdir}/plate.hh          \
          ${headerdir}/pick.hh           \
          ${headerdir}/cursor.hh         \
          ${headerdir}/user_cursor.hh    \
          ${headerdir}/edit_cursor.hh    \
          ${headerdir}/renderer.hh       \
          ${headerdir}/sprites.hh        \
          ${headerdir}/sprite_id.hh      \
          ${headerdir}/score.hh          \
          ${headerdir}/classes.hh        \
          ${headerdir}/log.hh            \
          ${headerdir}/fraction.hh       \
          ${headerdir}/config.hh         \
          ${headerdir}/parameters.hh     \
          ${headerdir}/stem_info.hh      \
          ${headerdir}/meta.hh           \
          ${headerdir}/error.hh          \
          ${headerdir}/refptr.hh         \
          ${headerdir}/smartptr.hh       \
          ${headerdir}/undefined.hh      \
          ${headerdir}/file_reader.hh    \
          ${headerdir}/ui.hh

srcfiles := ${cfiles} ${hfiles}

sofiles := ${builddir}/main.s.o           \
           ${builddir}/engine.s.o         \
           ${builddir}/press.s.o          \
           ${builddir}/engraver.s.o       \
           ${builddir}/engraver_state.s.o \
           ${builddir}/engrave_info.s.o   \
           ${builddir}/context.s.o        \
           ${builddir}/pageset.s.o        \
           ${builddir}/plate.s.o          \
           ${builddir}/pick.s.o           \
           ${builddir}/cursor.s.o         \
           ${builddir}/user_cursor.s.o    \
           ${builddir}/edit_cursor.s.o    \
           ${builddir}/renderer.s.o       \
           ${builddir}/sprites.s.o        \
           ${builddir}/sprite_id.s.o      \
           ${builddir}/score.s.o          \
           ${builddir}/classes.s.o        \
           ${builddir}/log.s.o            \
           ${builddir}/fraction.s.o       \
           ${builddir}/error.s.o          \
           ${builddir}/config.s.o

afiles := ${builddir}/main.o           \
          ${builddir}/engine.o         \
          ${builddir}/press.o          \
          ${builddir}/engraver.o       \
          ${builddir}/engraver_state.o \
          ${builddir}/engrave_info.o   \
          ${builddir}/context.o        \
          ${builddir}/pageset.o        \
          ${builddir}/plate.o          \
          ${builddir}/pick.o           \
          ${builddir}/cursor.o         \
          ${builddir}/user_cursor.o    \
          ${builddir}/edit_cursor.o    \
          ${builddir}/renderer.o       \
          ${builddir}/sprites.o        \
          ${builddir}/sprite_id.o      \
          ${builddir}/score.o          \
          ${builddir}/classes.o        \
          ${builddir}/log.o            \
          ${builddir}/fraction.o       \
          ${builddir}/error.o          \
          ${builddir}/config.o

docfiles := @srcdir@/AUTHORS       \
            @srcdir@/LICENCE.pdf   \
            @srcdir@/README        \
            ${datasrc}/CC-BY-SA.pdf

distfiles := @srcdir@/AUTHORS      \
             @srcdir@/configure    \
             @srcdir@/install-sh   \
             @srcdir@/LICENCE.pdf  \
             @srcdir@/Makefile.ac  \
             @srcdir@/README       \
             @srcdir@/data         \
             @srcdir@/doc          \
             @srcdir@/src

# header dependency list
deps_config_hh         := ${headerdir}/config.hh
deps_error_hh          := ${headerdir}/error.hh
deps_fraction_hh       := ${headerdir}/fraction.hh
deps_log_hh            := ${headerdir}/log.hh
deps_meta_hh           := ${headerdir}/meta.hh
deps_parameters_hh     := ${headerdir}/parameters.hh
deps_refptr_hh         := ${headerdir}/refptr.hh
deps_smartptr_hh       := ${headerdir}/smartptr.hh
deps_sprite_id_hh      := ${headerdir}/sprite_id.hh
deps_undefined_hh      := ${headerdir}/undefined.hh
deps_sprites_hh        := ${headerdir}/sprites.hh ${deps_sprite_id_hh}
deps_classes_hh        := ${headerdir}/classes.hh ${deps_smartptr_hh} ${deps_refptr_hh} ${deps_fraction_hh} ${deps_sprite_id_hh}
deps_context_hh        := ${headerdir}/context.hh ${deps_classes_hh} ${deps_error_hh}
deps_stem_info_hh      := ${headerdir}/stem_info.hh ${deps_classes_hh}
deps_engrave_info_hh   := ${headerdir}/engrave_info.hh ${deps_stem_info_hh} ${deps_score_hh} ${deps_plate_hh}
deps_score_hh          := ${headerdir}/score.hh ${deps_classes_hh} ${deps_parameters_hh} ${deps_meta_hh} ${deps_error_hh}
deps_cursor_hh         := ${headerdir}/cursor.hh ${deps_score_hh}
deps_pick_hh           := ${headerdir}/pick.hh ${deps_cursor_hh} ${deps_sprites_hh} ${deps_log_hh}
deps_plate_hh          := ${headerdir}/plate.hh ${deps_cursor_hh} ${deps_stem_info_hh} ${deps_context_hh}
deps_pageset_hh        := ${headerdir}/pageset.hh ${deps_plate_hh}
deps_engraver_state_hh := ${headerdir}/engraver_state.hh ${deps_pageset_hh} ${deps_pick_hh} ${deps_engrave_info_hh}
deps_user_cursor_hh    := ${headerdir}/user_cursor.hh ${deps_cursor_hh} ${deps_pageset_hh} ${deps_log_hh}
deps_engraver_hh       := ${headerdir}/engraver.hh ${deps_pageset_hh} ${deps_sprites_hh} ${deps_log_hh}
deps_edit_cursor_hh    := ${headerdir}/edit_cursor.hh ${deps_user_cursor_hh} ${deps_engraver_hh}
deps_renderer_hh       := ${headerdir}/renderer.hh ${deps_sprites_hh} ${deps_error_hh}
deps_press_hh          := ${headerdir}/press.hh ${deps_pageset_hh} ${deps_renderer_hh} ${deps_user_cursor_hh}
deps_engine_hh         := ${headerdir}/engine.hh ${deps_press_hh} ${deps_edit_cursor_hh}

deps_classes_cpp        := ${srcdir}/classes.cpp ${deps_classes_hh} ${deps_engraver_state_hh} ${deps_log_hh} ${deps_undefined_hh}
deps_config_cpp         := ${srcdir}/config.cpp ${deps_config_hh}
deps_context_cpp        := ${srcdir}/context.cpp ${deps_context_hh}
deps_cursor_cpp         := ${srcdir}/cursor.cpp ${deps_cursor_hh}
deps_error_cpp          := ${srcdir}/error.cpp ${deps_error_hh}
deps_edit_cursor_cpp    := ${srcdir}/edit_cursor.cpp ${deps_edit_cursor_hh} ${deps_log_hh}
deps_engine_cpp         := ${srcdir}/engine.cpp ${deps_engine_hh} ${deps_log_hh}
deps_engrave_info_cpp   := ${srcdir}/engrave_info.cpp ${deps_engrave_info_hh} ${deps_log_hh}
deps_engraver_cpp       := ${srcdir}/engraver.cpp ${deps_engraver_hh} ${deps_engraver_state_hh} ${deps_log_hh} ${deps_undefined_hh}
deps_engraver_state_cpp := ${srcdir}/engraver_state.cpp ${deps_engraver_state_hh} ${deps_log_hh} ${deps_undefined_hh}
deps_fraction_cpp       := ${srcdir}/fraction.cpp ${deps_fraction_hh}
deps_log_cpp            := ${srcdir}/log.cpp ${deps_log_hh}
deps_main_cpp           := ${srcdir}/main.cpp
deps_pageset_cpp        := ${srcdir}/pageset.cpp ${deps_pageset_hh}
deps_pick_cpp           := ${srcdir}/pick.cpp ${deps_pick_hh} ${deps_log_hh} ${deps_undefined_hh}
deps_plate_cpp          := ${srcdir}/plate.cpp ${deps_plate_hh} ${deps_undefined_hh}
deps_press_cpp          := ${srcdir}/press.cpp ${deps_press_hh} ${deps_log_hh} ${deps_undefined_hh}
deps_renderer_cpp       := ${srcdir}/renderer.cpp ${deps_renderer_hh}
deps_score_cpp          := ${srcdir}/score.cpp ${deps_score_hh}
deps_sprite_id_cpp      := ${srcdir}/sprite_id.cpp ${deps_sprite_id_hh} ${deps_undefined_hh}
deps_sprites_cpp        := ${srcdir}/sprites.cpp ${deps_sprites_hh} ${deps_undefined_hh}
deps_user_cursor_cpp    := ${srcdir}/user_cursor.cpp ${deps_user_cursor_hh} ${deps_log_hh}


#
# MAIN TARGETS
#

.PHONY: all shared  static                                                                           \
        install  install-all  install-shared  install-static  install-data install-headers           \
        doc alldoc  man  html  pdf  dvi  ps                                                          \
        install-alldoc  install-doc  install-man  install-html  install-pdf  install-dvi  install-ps \
        uninstall  uninstall-shared  uninstall-static uninstall-data uninstall-headers               \
        uninstall-doc  uninstall-man  uninstall-html  uninstall-pdf  uninstall-dvi  uninstall-ps     \
        clean  distclean  help                                                                       \
        dist dist-gzip dist-bzip2 dist-zip deb

# compile
all:    ${srcfiles} shared static
shared: ${srcfiles} ${builddir} ${builddir}/${sofile}
static: ${srcfiles} ${builddir} ${builddir}/${afile}

# install
install:     install-shared install-static install-data install-doc
install-dev: install-shared install-static install-data install-doc    install-headers
install-all: install-shared install-static install-data install-alldoc install-headers

install-shared: ${builddir} ${builddir}/${sofile} ${libdir}
	@echo "Installing:  ${sofile}"
	@${INSTALL} ${builddir}/${sofile} ${libdir}
	@-${LN} -f ${libdir}/${sofile} ${libdir}/${sobase}
	@${LDCONFIG} -n ${libdir}

install-static: ${builddir} ${builddir}/${afile} ${libdir}
	@echo "Installing:  ${afile}"
	@cp ${builddir}/${afile} ${libdir}/${afile}

install-data: ${datadir}/dtd ${datadir}/symbol
	@echo "Installing:  Symbols"
	@${INSTALLU} -t ${datadir}/symbol ${datasrc}/symbol/*
	@echo "Installing:  libscorepress.symbols.dtd"
	@${INSTALLU} -t ${datadir}/dtd ${datasrc}/dtd/*

install-headers: ${includedir}/${basename}
	@echo "Installing:  Headers"
	@${INSTALL} -t ${includedir}/${basename} ${headerdir}/*.hh

# documentation
${doxyfile}: ${doxy_ac}
	@echo "Generating:  Doxyfile"
	@${SED} -e 's|@PACKAGE_NAME[@]|@PACKAGE_NAME@|g'       \
	        -e 's|@PACKAGE_VERSION[@]|@PACKAGE_VERSION@|g' \
	        -e 's|@OUTPUT_DIR[@]|${builddir}|g'            \
	        -e 's|@SOURCE_DIR[@]|${srcdir}|g'              \
	        -e 's|@HEADER_DIR[@]|${headerdir}|g'           \
	        -e 's|@DOC_DIR[@]|${docsrc}|g'                 \
	        -e 's|@LATEX[@]|${LATEX}|g'                    \
	        -e 's|@MAKEINDEX[@]|${MAKEINDEX}|g'            \
	        < ${doxy_ac} > ${doxyfile}

doc:    man pdf
alldoc: man pdf html dvi ps

man: ${builddir}/man/man3
${builddir}/man/man3: ${doxyfile} ${builddir}
	@echo "Generating:  Manpages..."
	@if test "${DOXYGEN}" = ":"; then                               \
	     echo "                FAILED (no DoxyGen installed)";      \
	 else                                                           \
	     (cat ${doxyfile}; echo "GENERATE_MAN=yes") | ${DOXYGEN} -; \
	 fi

html: ${builddir}/html
${builddir}/html: ${doxyfile} ${builddir}
	@echo "Generating:  Documentation (HTML)..."
	@if test "${DOXYGEN}" = ":"; then                                \
	     echo "                FAILED (no DoxyGen installed)";       \
	 else                                                            \
	     (cat ${doxyfile}; echo "GENERATE_HTML=yes") | ${DOXYGEN} -; \
	 fi
	@if test -d ${builddir}/html; then chmod -R 0775 ${builddir}/html; fi

pdf: ${builddir}/refman.pdf
${builddir}/refman.pdf: ${doxyfile} ${builddir}
	@echo "Generating:  Documentation (PDF)..."
	@if test "${DOXYGEN}" = ":"; then                                 \
	     echo "                FAILED (no DoxyGen installed)";        \
	 else                                                             \
	     (cat ${doxyfile}; echo "GENERATE_LATEX=yes";            \
	                       echo "LATEX_CMD_NAME=\"${LATEX} --output-format pdf\"") | ${DOXYGEN} -; \
	 fi
	@if test -d ${builddir}/latex; then                     \
	     (cd ${builddir}/latex && ${MAKE} -s) > /dev/null;  \
	     if test -e ${builddir}/latex/refman.pdf; then      \
	         cp ${builddir}/latex/refman.pdf ${builddir};   \
	     else                                               \
	         echo "                FAILED (LaTeX failure)"; \
	     fi;                                                \
	 fi

dvi: ${builddir}/refman.dvi
${builddir}/refman.dvi: ${doxyfile} ${builddir}
	@echo "Generating:  Documentation (DVI)..."
	@if test "${DOXYGEN}" = ":"; then                            \
	     echo "                FAILED (no DoxyGen installed)";   \
	 else                                                        \
	     (cat ${doxyfile}; echo "GENERATE_LATEX=yes";            \
	                       echo "LATEX_CMD_NAME=\"${LATEX} --output-format dvi\"") | ${DOXYGEN} -; \
	 fi
	@if test -d ${builddir}/latex; then                     \
	     (cd ${builddir}/latex && ${MAKE} -s) > /dev/null;  \
	     if test -e ${builddir}/latex/refman.dvi; then      \
	         cp ${builddir}/latex/refman.dvi ${builddir};   \
	     else                                               \
	         echo "                FAILED (LaTeX failure)"; \
	     fi;                                                \
	 fi

ps: ${builddir}/refman.ps
${builddir}/refman.ps: ${builddir}/refman.dvi
	@echo "Generating:  Documentation (PS)..."
	@(cd ${builddir}/latex && dvips -q refman.dvi) > /dev/null;
	@if test -e ${builddir}/latex/refman.ps; then       \
	     cp ${builddir}/latex/refman.ps ${builddir};    \
	 else                                               \
	     echo "                FAILED (dvips failure)"; \
	 fi

install-alldoc: install-doc install-man install-html install-pdf install-dvi install-ps

install-doc: ${docdir}
	@echo "Installing:  Base Documentation"
	@${INSTALLU} ${docfiles} ${docdir}

install-man: ${mandir}
	@echo "Installing:  Manpages"
	@test -d ${builddir}/man/man3 && (cd ${builddir}/man/man3 && gzip * 2> /dev/null) || echo "  ERROR: Documentation not built. Please run \"make man\"."
	@test -d ${builddir}/man/man3 && ${INSTALLU} ${builddir}/man/man3/ScorePress_* ${mandir} || :

install-html: ${htmldir}
	@echo "Installing:  Documentation (HTML)"
	@test -d ${builddir}/html && ${INSTALLU} ${builddir}/html/* ${htmldir} || echo "  ERROR: Documentation not built. Please run \"make html\"."
	@-${LN} ${htmldir}/index.html @htmldir@/index.html

install-pdf: ${pdfdir}
	@echo "Installing:  Documentation (PDF)"
	@test -f ${builddir}/refman.pdf && ${INSTALLU} ${builddir}/refman.pdf ${pdfdir} || echo "  ERROR: Documentation not built. Please run \"make pdf\"."

install-dvi: ${dvidir}
	@echo "Installing:  Documentation (DVI)"
	@test -f ${builddir}/refman.dvi && ${INSTALLU} ${builddir}/refman.dvi ${dvidir} || echo "  ERROR: Documentation not built. Please run \"make dvi\"."

install-ps: ${psdir}
	@echo "Installing:  Documentation (PS)"
	@test -f ${builddir}/refman.ps && ${INSTALLU} ${builddir}/refman.ps ${psdir} || echo "  ERROR: Documentation not built. Please run \"make ps\"."


# uninstall
uninstall: uninstall-shared uninstall-static uninstall-data uninstall-headers uninstall-doc

uninstall-shared:
	@test -f ${libdir}/${sobase} -o -f ${libdir}/${soname} -o -f ${libdir}/${sofile} && echo "Removing:  Shared Libraries" || :
	@-rm -f ${libdir}/${sobase}
	@-rm -f ${libdir}/${soname}
	@-rm -f ${libdir}/${sofile}

uninstall-static:
	@test -f ${libdir}/${afile} && echo "Removing:  Static Libraries" || :
	@-rm -f ${libdir}/${afile}

uninstall-data:
	@-test -d ${datadir} && echo "Removing:  Base Data" || :
	@-rm -rf ${datadir}/symbol
	@-rm -rf ${datadir}/dtd
	@test -d ${datadir} && (rmdir ${datadir} 2> /dev/null || echo "  WARNING: \"${datadir}\" is not empty") || :

uninstall-headers:
	@test -d ${includedir} && echo "Removing:  Headers" || :
	@-rm -rf ${includedir}

uninstall-doc: uninstall-man uninstall-html uninstall-pdf uninstall-dvi unisntall-ps
	@-test -d ${docdir} && echo "Removing:  Base Documentation" || :
	@-rm -f ${docdir}/AUTHORS
	@-rm -f ${docdir}/CC-BY-SA.pdf
	@-rm -f ${docdir}/LICENCE.pdf
	@-rm -f ${docdir}/README
	@test -d ${docdir} && (rmdir ${docdir} 2> /dev/null || echo "  WARNING: \"${docdir}\" is not empty") || :

uninstall-man:
	@test -f ${mandir}/ScorePress_Engraver.3.gz && echo "Removing:  Manpages" || :
	@-rm -f ${mandir}/ScorePress_*

uninstall-html:
	@test -d ${htmldir} && echo "Removing:  Documentation (HTML)" || :
	@-rm -f @htmldir@/index.html
	@-rm -rf ${htmldir}
	
uninstall-pdf:
	@test -f ${docdir}/refman.pdf && echo "Removing:  Documentation (PDF)" || :
	@-rm -f ${docdir}/refman.pdf
	@-rmdir ${docdir} 2> /dev/null || :

uninstall-dvi:
	@test -f ${docdir}/refman.dvi && echo "Removing:  Documentation (DVI)" || :
	@-rm -f ${docdir}/refman.dvi
	@-rmdir ${docdir} 2> /dev/null || :

unisntall-ps:
	@test -f ${docdir}/refman.ps && echo "Removing:  Documentation (PS)" || :
	@-rm -f ${docdir}/refman.ps
	@-rmdir ${docdir} 2> /dev/null || :

# clean
clean:
	@echo "Cleaning \"${PACKAGE_TARNAME}\""
	@echo "  Deleting:       object-files..."
	@-rm -f  ${afiles}
	@-rm -f  ${builddir}/${afile}
	@-rm -f  ${sofiles}
	@-rm -f  ${builddir}/${sofile}
	@echo "  Deleting:       documentation-files..."
	@-rm -rf ${builddir}/html
	@-rm -rf ${builddir}/latex
	@-rm -rf ${builddir}/man
	@-rm -f  ${builddir}/refman.pdf
	@-rm -f  ${builddir}/refman.dvi
	@-rm -f  ${builddir}/refman.ps
	@echo "  Deleting:       build directory..."
	@test -d ${builddir} && (rmdir ${builddir} 2> /dev/null || echo "  WARNING: \"${builddir}\" is not empty") || :

distclean: clean
	@echo "  Deleting:       configuration..."
	@-rm -f ${headerdir}/config.hh
	@-rm -f ${doxyfile}
	@-rm -f @srcdir@/config.log
	@-rm -f @srcdir@/config.status
	@-rm -f @srcdir@/Makefile

help:
	@echo "No Help Available"

# distributions
dist: ${srcfiles} ${distdir}
	cp -RP --preserve=timestamps,links ${distfiles} ${distdir}
	if test -f ${headerdir}/config.hh; then rm -f ${header}/config.hh; fi
	if test -f ${distdir}/doc/Doxyfile;  then rm -f ${distdir}/doc/Doxyfile;  fi

dist-gzip: ${srcfiles} dist
	tar -cf - ${distdir} | gzip -c > ${distdir}.tar.gz

dist-bzip2: ${srcfiles} dist
	tar -cf - ${distdir} | bzip2 -c > ${distdir}.tar.bz2

dist-zip: ${srcfiles} dist
	zip -qr ${distdir}.zip ${distdir}

deb: ${srcfiles}
	@echo "Debian Packaging not implemented yet."

# directories
${builddir} ${libdir} ${includedir}/${basename} ${includedir2}/${basename} ${datadir} ${datadir}/dtd ${datadir}/symbol ${docdir} ${mandir} ${htmldir} ${distdir}:
#@echo "[[Creating directory:  $@]]"
	@-mkdir -p $@ 2> /dev/null || echo "  ERROR: cannot create directory \"$@\""


#
# TARGET FILES
#

${builddir}/${sofile}:  ${srcfiles}
						@echo "Making:  ${sofile}"
						@${MAKE} -s ${sofiles}
						@echo "  Linking:        ${sofile}..."
						@${CXX} -shared -Wl,-soname,${soname} -lc ${sofiles} -o ${builddir}/${sofile} ${XMLLIBS} ${FLAGS}

${builddir}/${afile}:   ${srcfiles}
						@echo "Making:  ${afile}"
						@${MAKE} -s ${afiles}
						@echo "  Linking:        ${afile}..."
						@${AR} ${builddir}/${afile} ${afiles}

#
# OBJECT FILES
#

${builddir}/main.o:			${deps_main_cpp}
							echo "  Compiling:      main.cpp..."
							${CXX} -c ${srcdir}/main.cpp -o ${builddir}/main.o ${FLAGS}
${builddir}/main.s.o:		${deps_main_cpp}
							echo "  Compiling:      main.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/main.cpp -o ${builddir}/main.s.o ${FLAGS}

${builddir}/engine.o:		${deps_engine_cpp}
							echo "  Compiling:      engine.cpp..."
							${CXX} -c ${srcdir}/engine.cpp -o ${builddir}/engine.o ${FLAGS}
${builddir}/engine.s.o:		${deps_engine_cpp}
							echo "  Compiling:      engine.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/engine.cpp -o ${builddir}/engine.s.o ${FLAGS}

${builddir}/press.o:		${deps_press_cpp}
							echo "  Compiling:      press.cpp..."
							${CXX} -c ${srcdir}/press.cpp -o ${builddir}/press.o ${FLAGS}
${builddir}/press.s.o:		${deps_press_cpp}
							echo "  Compiling:      press.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/press.cpp -o ${builddir}/press.s.o ${FLAGS}

${builddir}/engraver.o:		${deps_engraver_cpp}
							echo "  Compiling:      engraver.cpp..."
							${CXX} -c ${srcdir}/engraver.cpp -o ${builddir}/engraver.o ${FLAGS}
${builddir}/engraver.s.o:	${deps_engraver_cpp}
							echo "  Compiling:      engraver.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/engraver.cpp -o ${builddir}/engraver.s.o ${FLAGS}

${builddir}/engraver_state.o:	${deps_engraver_state_cpp}
								echo "  Compiling:      engraver_state.cpp..."
								${CXX} -c ${srcdir}/engraver_state.cpp -o ${builddir}/engraver_state.o ${FLAGS}
${builddir}/engraver_state.s.o:	${deps_engraver_state_cpp}
								echo "  Compiling:      engraver_state.cpp..."
								${CXX} ${SOFLAGS} -c ${srcdir}/engraver_state.cpp -o ${builddir}/engraver_state.s.o ${FLAGS}

${builddir}/engrave_info.o:		${deps_engrave_info_cpp}
								echo "  Compiling:      engrave_info.cpp..."
								${CXX} -c ${srcdir}/engrave_info.cpp -o ${builddir}/engrave_info.o ${FLAGS}
${builddir}/engrave_info.s.o:	${deps_engrave_info_cpp}
								echo "  Compiling:      engrave_info.cpp..."
								${CXX} ${SOFLAGS} -c ${srcdir}/engrave_info.cpp -o ${builddir}/engrave_info.s.o ${FLAGS}

${builddir}/context.o:		${deps_context_cpp}
							echo "  Compiling:      context.cpp..."
							${CXX} -c ${srcdir}/context.cpp -o ${builddir}/context.o ${FLAGS}
${builddir}/context.s.o:	${deps_context_cpp}
							echo "  Compiling:      context.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/context.cpp -o ${builddir}/context.s.o ${FLAGS}

${builddir}/pageset.o:		${deps_pageset_cpp}
							echo "  Compiling:      pageset.cpp..."
							${CXX} -c ${srcdir}/pageset.cpp -o ${builddir}/pageset.o ${FLAGS}
${builddir}/pageset.s.o:	${deps_pageset_cpp}
							echo "  Compiling:      pageset.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/pageset.cpp -o ${builddir}/pageset.s.o ${FLAGS}

${builddir}/plate.o:		${deps_plate_cpp}
							echo "  Compiling:      plate.cpp..."
							${CXX} -c ${srcdir}/plate.cpp -o ${builddir}/plate.o ${FLAGS}
${builddir}/plate.s.o:		${deps_plate_cpp}
							echo "  Compiling:      plate.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/plate.cpp -o ${builddir}/plate.s.o ${FLAGS}

${builddir}/cursor.o:		${deps_cursor_cpp}
							echo "  Compiling:      cursor.cpp..."
							${CXX} -c ${srcdir}/cursor.cpp -o ${builddir}/cursor.o ${FLAGS}
${builddir}/cursor.s.o:		${deps_cursor_cpp}
							echo "  Compiling:      cursor.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/cursor.cpp -o ${builddir}/cursor.s.o ${FLAGS}

${builddir}/user_cursor.o:		${deps_user_cursor_cpp}
								echo "  Compiling:      user_cursor.cpp..."
								${CXX} -c ${srcdir}/user_cursor.cpp -o ${builddir}/user_cursor.o ${FLAGS}
${builddir}/user_cursor.s.o:	${deps_user_cursor_cpp}
								echo "  Compiling:      user_cursor.cpp..."
								${CXX} ${SOFLAGS} -c ${srcdir}/user_cursor.cpp -o ${builddir}/user_cursor.s.o ${FLAGS}

${builddir}/edit_cursor.o:		${deps_edit_cursor_cpp}
								echo "  Compiling:      edit_cursor.cpp..."
								${CXX} -c ${srcdir}/edit_cursor.cpp -o ${builddir}/edit_cursor.o ${FLAGS}
${builddir}/edit_cursor.s.o:	${deps_edit_cursor_cpp}
								echo "  Compiling:      edit_cursor.cpp..."
								${CXX} ${SOFLAGS} -c ${srcdir}/edit_cursor.cpp -o ${builddir}/edit_cursor.s.o ${FLAGS}

${builddir}/pick.o:			${deps_pick_cpp}
							echo "  Compiling:      pick.cpp..."
							${CXX} -c ${srcdir}/pick.cpp -o ${builddir}/pick.o ${FLAGS}
${builddir}/pick.s.o:		${deps_pick_cpp}
							echo "  Compiling:      pick.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/pick.cpp -o ${builddir}/pick.s.o ${FLAGS}

${builddir}/renderer.o:		${deps_renderer_cpp}
							echo "  Compiling:      renderer.cpp..."
							${CXX} -c ${srcdir}/renderer.cpp -o ${builddir}/renderer.o ${XMLFLAGS} ${FLAGS}
${builddir}/renderer.s.o:	${deps_renderer_cpp}
							echo "  Compiling:      renderer.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/renderer.cpp -o ${builddir}/renderer.s.o ${XMLFLAGS} ${FLAGS}

${builddir}/sprites.o:		${deps_sprites_cpp}
							echo "  Compiling:      sprites.cpp..."
							${CXX} -c ${srcdir}/sprites.cpp -o ${builddir}/sprites.o ${FLAGS}
${builddir}/sprites.s.o:	${deps_sprites_cpp}
							echo "  Compiling:      sprites.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/sprites.cpp -o ${builddir}/sprites.s.o ${FLAGS}

${builddir}/sprite_id.o:	${deps_sprite_id_cpp}
							echo "  Compiling:      sprite_id.cpp..."
							${CXX} -c ${srcdir}/sprite_id.cpp -o ${builddir}/sprite_id.o ${FLAGS}
${builddir}/sprite_id.s.o:	${deps_sprite_id_cpp}
							echo "  Compiling:      sprite_id.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/sprite_id.cpp -o ${builddir}/sprite_id.s.o ${FLAGS}

${builddir}/score.o:		${deps_score_cpp}
							echo "  Compiling:      score.cpp..."
							${CXX} -c ${srcdir}/score.cpp -o ${builddir}/score.o ${FLAGS}
${builddir}/score.s.o:		${deps_score_cpp}
							echo "  Compiling:      score.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/score.cpp -o ${builddir}/score.s.o ${FLAGS}

${builddir}/classes.o:		${deps_classes_cpp}
							echo "  Compiling:      classes.cpp..."
							${CXX} -c ${srcdir}/classes.cpp -o ${builddir}/classes.o ${FLAGS}
${builddir}/classes.s.o:	${deps_classes_cpp}
							echo "  Compiling:      classes.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/classes.cpp -o ${builddir}/classes.s.o ${FLAGS}

${builddir}/log.o:			${deps_log_cpp}
							echo "  Compiling:      log.cpp..."
							${CXX} -c ${srcdir}/log.cpp -o ${builddir}/log.o ${FLAGS}
${builddir}/log.s.o:		${deps_log_cpp}
							echo "  Compiling:      log.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/log.cpp -o ${builddir}/log.s.o ${FLAGS}

${builddir}/fraction.o:		${deps_fraction_cpp}
							echo "  Compiling:      fraction.cpp..."
							${CXX} -c ${srcdir}/fraction.cpp -o ${builddir}/fraction.o ${FLAGS} ${FRACT_SIZECHECK}
${builddir}/fraction.s.o:	${deps_fraction_cpp}
							echo "  Compiling:      fraction.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/fraction.cpp -o ${builddir}/fraction.s.o ${FLAGS} ${FRACT_SIZECHECK}

${builddir}/error.o:		${deps_error_cpp}
							echo "  Compiling:      error.cpp..."
							${CXX} -c ${srcdir}/error.cpp -o ${builddir}/error.o ${FLAGS}
${builddir}/error.s.o:		${deps_error_cpp}
							echo "  Compiling:      error.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/error.cpp -o ${builddir}/error.s.o ${FLAGS}

${builddir}/config.o:		${deps_config_cpp}
							echo "  Compiling:      config.cpp..."
							${CXX} -c ${srcdir}/config.cpp -o ${builddir}/config.o ${FLAGS} ${CONFIGFLAGS}
${builddir}/config.s.o:		${deps_config_cpp}
							echo "  Compiling:      config.cpp..."
							${CXX} ${SOFLAGS} -c ${srcdir}/config.cpp -o ${builddir}/config.s.o ${FLAGS} ${CONFIGFLAGS}

